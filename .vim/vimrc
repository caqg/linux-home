" vim initialization

set autoindent
set autowrite
set backspace           =indent
set backspace          +=eol
set backspace          +=start
set backup
set nohlsearch
set incsearch
set laststatus          =1
set numberwidth         =5
set ruler
set shell               =/bin/bash
set shiftwidth          =8
set smartcase
set smarttab
set tabstop             =8
set textwidth           =78
set nowrap
set writebackup

if exists("+autochdir")
   set autochdir
endif

set directory           =
set directory          +=~/tmp
set directory          +=.              "do not interfere with git or svn
set directory          +=/var/tmp
set directory          +=/tmp

set path                =,,
set path               +=/usr/include/c++/8/**
set path               +=/usr/include/x86_64-linux-gnu/c++/8/**
set path               +=/usr/lib/gcc/x86_64-linux-gnu/8/include*/**
set path               +=/usr/include/x86_64-linux-gnu
set path               +=/usr/local/include
set path               +=/usr/include
set path               +=/usr/include/libxml2

set tags                =
set tags               +=tags
set tags               +=./tags
set tags               +=../tags

if &term =~ 'xterm*'
    if has("terminfo")
        set t_Co        =16
    endif
endif

if &term == "linux"
    colorscheme default
elseif &term == "screen"
    colorscheme default
else
    colorscheme solarized
    call togglebg#map("<F12>")
    set background      =dark
endif

"Before VIM8:  set noeb vb t_vb=
set belloff=all

syntax on
filetype indent on
filetype plugin on

if has("cscope")
    set cscopeprg       =cscope
    set nocscopetag
    set csto            =0
    set cscopeverbose
    if filereadable("cscope.out")
        try
            cscope add cscope.out
        catch /E568:/
            silent
        endtry
    endif
endif

let TE_Ctags_Path       = "/usr/local/bin/u-ctags"
let TE_Use_Right_Window = 1

" C/C++/Java, closer to the Emacs settings
autocmd FileType c,cpp,java     set cinoptions          =:0
autocmd FileType c,cpp,java     set cinoptions         +=(0
autocmd FileType c,cpp,java     set cinoptions         +=)30
autocmd FileType c,cpp,java     set cinoptions         +=!^F
autocmd FileType c,cpp,java     set cinoptions         +=g0
autocmd FileType c,cpp,java     set cinoptions         +=j1
autocmd FileType c,cpp,java     set cinoptions         +=J1
autocmd FileType c,cpp,java     set cinoptions         +=l0
autocmd FileType c,cpp,java     set cinoptions         +=t0
autocmd FileType c,cpp,java     set noexpandtab
autocmd FileType c,cpp,java     set foldmethod          =syntax
autocmd FileType c,cpp,java     set foldcolumn          =0
autocmd FileType c,cpp,java     set nofoldenable
autocmd FileType c,cpp,java     set formatoptions      +=cj
autocmd FileType c,cpp,java     set shiftwidth          =8
autocmd FileType c,cpp,java     set nosmarttab
autocmd FileType c,cpp,java     set tabstop             =8

function! FlipFolding()
    if &foldenable
        set nofoldenable
        set foldcolumn          =0
    else
        set foldenable
        set foldcolumn          =5
    endif
endfunction
command! FlipFolding :call FlipFolding()
noremap <F11> :call FlipFolding()<CR>

" vim script
autocmd FileType vim            set shiftwidth     =4
autocmd FileType vim            set expandtab
autocmd FileType vim            set foldcolumn     =0
autocmd FileType vim            set foldmethod     =indent
autocmd FileType vim            set nofoldenable

" delete trailing whitespace
autocmd FileType awk,tcl        autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType c,cpp,java     autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType conf           autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType gdb,make       autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType gitconfig      autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType lisp           autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType scheme         autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType verilog        autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType vim            autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType xml,xsd        autocmd BufWritePre <buffer> %s/\s\+$//e
autocmd FileType yacc,lex       autocmd BufWritePre <buffer> %s/\s\+$//e

set diffopt             =filler
set diffopt            +=iwhite
set diffopt            +=vertical

set scrollopt           =hor
set scrollopt          +=ver
set scrollopt          +=jump

" Adjust Verilog's indentation
function! VerilogSettings ()
    if exists('b:current_syntax')
        if b:current_syntax == 'verilog'
            let b:verilog_indent_modules = 1
        endif
    endif
endfunction
autocmd BufReadPost *.v call VerilogSettings()

" Treat *.md as markdown, not modula2
autocmd BufNewFile,BufRead *.md setfiletype markdown

" Man pages
runtime! ftplugin/man.vim

"end vimrc
