#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|%IN-PACKAGE| "PXREF" :|NICKNAMES| '|COMMON-LISP|::|NIL| :|USE|
 '|COMMON-LISP|::|NIL| :|CASE-SENSITIVE| |COMMON-LISP|::|NIL| :|CASE-INVERTED|
 |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|USE-PACKAGE| '("COMMON-LISP") "PXREF")
(|SYSTEM|::|INTERN-EXPORT|
 '("LIST-CALLERS" "LIST-USERS" "LIST-READERS" "LIST-SETTERS" "WHAT-FILES-CALL"
   "WHO-CALLS" "LIST-CALLEES" "SOURCE-FILE" "CLEAR-TABLES"
   "DEFINE-PATTERN-SUBSTITUTION" "DEFINE-CALLER-PATTERN"
   "DEFINE-VARIABLE-PATTERN" "DEFINE-CALLER-PATTERN-SYNONYMS" "CLEAR-PATTERNS"
   "*LAST-FORM*" "*XREF-VERBOSE*" "*HANDLE-PACKAGE-FORMS*"
   "*HANDLE-FUNCTION-FORMS*" "*HANDLE-MACRO-FORMS*" "*TYPES-TO-IGNORE*"
   "*LAST-CALLER-TREE*" "*DEFAULT-GRAPHING-MODE*" "*INDENT-AMOUNT*" "XREF-FILE"
   "XREF-FILES" "WRITE-CALLERS-DATABASE-TO-FILE" "DISPLAY-DATABASE"
   "PRINT-CALLER-TREES" "MAKE-CALLER-TREE" "PRINT-INDENTED-TREE"
   "DETERMINE-FILE-DEPENDENCIES" "PRINT-FILE-DEPENDENCIES" "PSGRAPH-XREF")
 "PXREF" |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|FIND-PACKAGE| "PXREF")
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "PXREF"))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LOOKUP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SYMBOL| |PXREF|::|ENVIRONMENT|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|CAR-EQ|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|LIST| |PXREF|::|ITEM|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*FILE-CALLERS-DATABASE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*CALLERS-DATABASE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*READERS-DATABASE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*SETTERS-DATABASE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*CALLEES-DATABASE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|CALLERS-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|PXREF|::|NAME| |COMMON-LISP|::|&OPTIONAL|
    (|PXREF|::|DATABASE| :|CALLERS|))))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|PXREF|::|CALLERS-LIST|
  '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|SYSTEM|::|CHECK-REDEFINITION| '|PXREF|::|CALLERS-LIST|
  '|COMMON-LISP|::|DEFSETF|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|PXREF|::|CALLERS-LIST| '|SYSTEM|::|SETF-EXPANDER|)
   (|SYSTEM|::|TEXT| "SETF expander")))
 (|SYSTEM|::|%PUT| '|PXREF|::|CALLERS-LIST| '|SYSTEM|::|SETF-EXPANDER|
  (|COMMON-LISP|::|LIST*| -1. 1.
   (|COMMON-LISP|::|FUNCTION| |PXREF|::|SETF-CALLERS-LIST|
    (|COMMON-LISP|::|LAMBDA|
     (#1=#:|IG7497| |PXREF|::|CALLER| |PXREF|::|NAME|
      |COMMON-LISP|::|&OPTIONAL| (|PXREF|::|DATABASE| :|CALLERS|))
     (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| #1#))
     (|COMMON-LISP|::|BLOCK| |PXREF|::|CALLERS-LIST|
      `(|COMMON-LISP|::|SETF|
        (|COMMON-LISP|::|GETHASH| ,|PXREF|::|NAME|
         (|COMMON-LISP|::|CASE| ,|PXREF|::|DATABASE|
          (:|FILE| |PXREF|::|*FILE-CALLERS-DATABASE*|)
          (:|CALLEES| |PXREF|::|*CALLEES-DATABASE*|)
          (:|CALLERS| |PXREF|::|*CALLERS-DATABASE*|)
          (:|READERS| |PXREF|::|*READERS-DATABASE*|)
          (:|SETTERS| |PXREF|::|*SETTERS-DATABASE*|)))
        ,|PXREF|::|CALLER|))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|PXREF|::|CALLERS-LIST|
  '|COMMON-LISP|::|SETF| |COMMON-LISP|::|NIL|)
 '|PXREF|::|CALLERS-LIST|)
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LIST-CALLERS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LIST-READERS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LIST-SETTERS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LIST-USERS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|WHO-CALLS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SYMBOL| |COMMON-LISP|::|&OPTIONAL| |PXREF|::|HOW|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|WHAT-FILES-CALL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LIST-CALLEES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*SOURCE-FILE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|SOURCE-FILE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|PXREF|::|SOURCE-FILE|
  '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|SYSTEM|::|CHECK-REDEFINITION| '|PXREF|::|SOURCE-FILE|
  '|COMMON-LISP|::|DEFSETF|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|PXREF|::|SOURCE-FILE| '|SYSTEM|::|SETF-EXPANDER|)
   (|SYSTEM|::|TEXT| "SETF expander")))
 (|SYSTEM|::|%PUT| '|PXREF|::|SOURCE-FILE| '|SYSTEM|::|SETF-EXPANDER|
  (|COMMON-LISP|::|LIST*| -1. 1.
   (|COMMON-LISP|::|FUNCTION| |PXREF|::|SETF-SOURCE-FILE|
    (|COMMON-LISP|::|LAMBDA| (#1=#:|IG7561| |PXREF|::|VALUE| |PXREF|::|NAME|)
     (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| #1#))
     (|COMMON-LISP|::|BLOCK| |PXREF|::|SOURCE-FILE|
      `(|COMMON-LISP|::|SETF|
        (|COMMON-LISP|::|GETHASH| ,|PXREF|::|NAME| |PXREF|::|*SOURCE-FILE*|)
        ,|PXREF|::|VALUE|))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|PXREF|::|SOURCE-FILE| '|COMMON-LISP|::|SETF|
  |COMMON-LISP|::|NIL|)
 '|PXREF|::|SOURCE-FILE|)
(|SYSTEM|::|C-DEFUN| '|PXREF|::|CLEAR-TABLES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*PATTERN-CALLER-TYPE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|PATTERN-CALLER-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|PXREF|::|NAME|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|PXREF|::|PATTERN-CALLER-TYPE|
  '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|SYSTEM|::|CHECK-REDEFINITION| '|PXREF|::|PATTERN-CALLER-TYPE|
  '|COMMON-LISP|::|DEFSETF|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|PXREF|::|PATTERN-CALLER-TYPE|
    '|SYSTEM|::|SETF-EXPANDER|)
   (|SYSTEM|::|TEXT| "SETF expander")))
 (|SYSTEM|::|%PUT| '|PXREF|::|PATTERN-CALLER-TYPE| '|SYSTEM|::|SETF-EXPANDER|
  (|COMMON-LISP|::|LIST*| -1. 1.
   (|COMMON-LISP|::|FUNCTION| |PXREF|::|SETF-PATTERN-CALLER-TYPE|
    (|COMMON-LISP|::|LAMBDA| (#1=#:|IG7584| |PXREF|::|VALUE| |PXREF|::|NAME|)
     (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| #1#))
     (|COMMON-LISP|::|BLOCK| |PXREF|::|PATTERN-CALLER-TYPE|
      `(|COMMON-LISP|::|SETF|
        (|COMMON-LISP|::|GETHASH| ,|PXREF|::|NAME|
         |PXREF|::|*PATTERN-CALLER-TYPE*|)
        ,|PXREF|::|VALUE|))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|PXREF|::|PATTERN-CALLER-TYPE|
  '|COMMON-LISP|::|SETF| |COMMON-LISP|::|NIL|)
 '|PXREF|::|PATTERN-CALLER-TYPE|)
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*PATTERN-SUBSTITUTION-TABLE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LOOKUP-PATTERN-SUBSTITUTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|PXREF|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|PXREF|::|DEFINE-PATTERN-SUBSTITUTION|)
(|SYSTEM|::|%PUTD| '|PXREF|::|DEFINE-PATTERN-SUBSTITUTION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |PXREF|::|DEFINE-PATTERN-SUBSTITUTION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Defines NAME to be equivalent to the specified pattern. Useful for\n
   making patterns more readable. For example, the LAMBDA-LIST is \n
   defined as a pattern substitution, making the definition of the\n
   DEFUN caller-pattern simpler."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|PXREF|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|PXREF|::|PATTERN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |PXREF|::|DEFINE-PATTERN-SUBSTITUTION|
       `(|COMMON-LISP|::|SETF|
         (|COMMON-LISP|::|GETHASH| ',|PXREF|::|NAME|
          |PXREF|::|*PATTERN-SUBSTITUTION-TABLE*|)
         ',|PXREF|::|PATTERN|))))))
  '(|PXREF|::|NAME| |PXREF|::|PATTERN|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*CALLER-PATTERN-TABLE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|LOOKUP-CALLER-PATTERN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|PXREF|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|PXREF|::|DEFINE-CALLER-PATTERN|)
(|SYSTEM|::|%PUTD| '|PXREF|::|DEFINE-CALLER-PATTERN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |PXREF|::|DEFINE-CALLER-PATTERN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Defines NAME as a function/macro call with argument structure\n
   described by PATTERN. CALLER-TYPE, if specified, assigns a type to\n
   the pattern, which may be used to exclude references to NAME while\n
   viewing the database. For example, all the Common Lisp definitions\n
   have a caller-type of :lisp or :lisp2, so that you can exclude \n
   references to common lisp functions from the calling tree."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|PXREF|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|PXREF|::|PATTERN| (|COMMON-LISP|::|CADDR| . #1#))
       (|PXREF|::|CALLER-TYPE| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |PXREF|::|DEFINE-CALLER-PATTERN|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|WHEN| ',|PXREF|::|CALLER-TYPE|
          (|COMMON-LISP|::|SETF|
           (|PXREF|::|PATTERN-CALLER-TYPE| ',|PXREF|::|NAME|)
           ',|PXREF|::|CALLER-TYPE|))
         (|COMMON-LISP|::|WHEN| ',|PXREF|::|PATTERN|
          (|COMMON-LISP|::|SETF|
           (|COMMON-LISP|::|GETHASH| ',|PXREF|::|NAME|
            |PXREF|::|*CALLER-PATTERN-TABLE*|)
           ',|PXREF|::|PATTERN|))))))))
  '(|PXREF|::|NAME| |PXREF|::|PATTERN| |COMMON-LISP|::|&OPTIONAL|
    |PXREF|::|CALLER-TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|PXREF|::|DEFINE-VARIABLE-PATTERN|)
(|SYSTEM|::|%PUTD| '|PXREF|::|DEFINE-VARIABLE-PATTERN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |PXREF|::|DEFINE-VARIABLE-PATTERN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Defines NAME as a variable reference of type CALLER-TYPE. This is\n
   mainly used to establish the caller-type of the variable."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|PXREF|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|PXREF|::|CALLER-TYPE| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |PXREF|::|DEFINE-VARIABLE-PATTERN|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|WHEN| ',|PXREF|::|CALLER-TYPE|
          (|COMMON-LISP|::|SETF|
           (|PXREF|::|PATTERN-CALLER-TYPE| ',|PXREF|::|NAME|)
           ',|PXREF|::|CALLER-TYPE|))))))))
  '(|PXREF|::|NAME| |COMMON-LISP|::|&OPTIONAL| |PXREF|::|CALLER-TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|PXREF|::|DEFINE-CALLER-PATTERN-SYNONYMS|)
(|SYSTEM|::|%PUTD| '|PXREF|::|DEFINE-CALLER-PATTERN-SYNONYMS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |PXREF|::|DEFINE-CALLER-PATTERN-SYNONYMS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "For defining function caller pattern syntax synonyms. For each name\n
   in DESTINATIONS, defines its pattern as a copy of the definition of SOURCE.\n
   Allows a large number of identical patterns to be defined simultaneously.\n
   Must occur after the SOURCE has been defined."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|PXREF|::|SOURCE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|PXREF|::|DESTINATIONS| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |PXREF|::|DEFINE-CALLER-PATTERN-SYNONYMS|
       `(|COMMON-LISP|::|LET|
         ((|PXREF|::|SOURCE-TYPE|
           (|PXREF|::|PATTERN-CALLER-TYPE| ',|PXREF|::|SOURCE|))
          (|PXREF|::|SOURCE-PATTERN|
           (|COMMON-LISP|::|GETHASH| ',|PXREF|::|SOURCE|
            |PXREF|::|*CALLER-PATTERN-TABLE*|)))
         (|COMMON-LISP|::|WHEN| |PXREF|::|SOURCE-TYPE|
          (|COMMON-LISP|::|DOLIST| (|PXREF|::|DEST| ',|PXREF|::|DESTINATIONS|)
           (|COMMON-LISP|::|SETF|
            (|PXREF|::|PATTERN-CALLER-TYPE| |PXREF|::|DEST|)
            |PXREF|::|SOURCE-TYPE|)))
         (|COMMON-LISP|::|WHEN| |PXREF|::|SOURCE-PATTERN|
          (|COMMON-LISP|::|DOLIST| (|PXREF|::|DEST| ',|PXREF|::|DESTINATIONS|)
           (|COMMON-LISP|::|SETF|
            (|COMMON-LISP|::|GETHASH| |PXREF|::|DEST|
             |PXREF|::|*CALLER-PATTERN-TABLE*|)
            |PXREF|::|SOURCE-PATTERN|)))))))))
  '(|PXREF|::|SOURCE| |PXREF|::|DESTINATIONS|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|CLEAR-PATTERNS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*LAST-FORM*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*XREF-VERBOSE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|XREF-FILES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |PXREF|::|FILES|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*HANDLE-PACKAGE-FORMS*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*NORMAL-READTABLE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|XREF-FILE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|PXREF|::|FILENAME| |COMMON-LISP|::|&OPTIONAL|
    (|PXREF|::|CLEAR-TABLES| |COMMON-LISP|::|T|)
    (|PXREF|::|VERBOSE| |PXREF|::|*XREF-VERBOSE*|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*HANDLE-FUNCTION-FORMS*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*HANDLE-MACRO-FORMS*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*CALLEES-DATABASE-INCLUDES-VARIABLES*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|RECORD-CALLERS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|PXREF|::|FILENAME| |PXREF|::|FORM| |COMMON-LISP|::|&OPTIONAL|
    |PXREF|::|PATTERN| |PXREF|::|PARENT|
    (|PXREF|::|ENVIRONMENT| |COMMON-LISP|::|NIL|) |COMMON-LISP|::|FUNCALL|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|RECORD-CALLERS*|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|PXREF|::|FILENAME| |PXREF|::|FORM| |PXREF|::|PATTERN| |PXREF|::|PARENT|
    |PXREF|::|ENVIRONMENT| |COMMON-LISP|::|&OPTIONAL| |PXREF|::|CONTINUATION|
    |PXREF|::|IN-OPTIONALS| |PXREF|::|IN-KEYWORDS|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*TYPES-TO-IGNORE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|DISPLAY-DATABASE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| (|PXREF|::|DATABASE| :|CALLERS|)
    (|PXREF|::|TYPES-TO-IGNORE| |PXREF|::|*TYPES-TO-IGNORE*|))))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|WRITE-CALLERS-DATABASE-TO-FILE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|PXREF|::|FILENAME|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|INVERT-HASH-TABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|PXREF|::|TABLE| |COMMON-LISP|::|&OPTIONAL|
    (|PXREF|::|TYPES-TO-IGNORE| |PXREF|::|*TYPES-TO-IGNORE*|))))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|DETERMINE-FILE-DEPENDENCIES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL|
    (|PXREF|::|DATABASE| |PXREF|::|*CALLERS-DATABASE*|))))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|PRINT-FILE-DEPENDENCIES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL|
    (|PXREF|::|DATABASE| |PXREF|::|*CALLERS-DATABASE*|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*LAST-CALLER-TREE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*DEFAULT-GRAPHING-MODE*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|GATHER-TREE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|PXREF|::|PARENTS| |COMMON-LISP|::|&OPTIONAL| |PXREF|::|ALREADY-SEEN|
    (|PXREF|::|MODE| |PXREF|::|*DEFAULT-GRAPHING-MODE*|)
    (|PXREF|::|TYPES-TO-IGNORE| |PXREF|::|*TYPES-TO-IGNORE*|)
    |PXREF|::|COMPACT|)))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|FIND-ROOTS-AND-CYCLES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL|
    (|PXREF|::|MODE| |PXREF|::|*DEFAULT-GRAPHING-MODE*|)
    (|PXREF|::|TYPES-TO-IGNORE| |PXREF|::|*TYPES-TO-IGNORE*|))))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|MAKE-CALLER-TREE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL|
    (|PXREF|::|MODE| |PXREF|::|*DEFAULT-GRAPHING-MODE*|)
    (|PXREF|::|TYPES-TO-IGNORE| |PXREF|::|*TYPES-TO-IGNORE*|)
    |PXREF|::|COMPACT|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |PXREF|::|*INDENT-AMOUNT*|))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|PRINT-INDENTED-TREE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|PXREF|::|TREES| |COMMON-LISP|::|&OPTIONAL| (|PXREF|::|INDENT| 0.))))
(|SYSTEM|::|C-DEFUN| '|PXREF|::|PRINT-CALLER-TREES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (|PXREF|::|MODE| |PXREF|::|*DEFAULT-GRAPHING-MODE*|)
    (|PXREF|::|TYPES-TO-IGNORE| |PXREF|::|*TYPES-TO-IGNORE*|)
    |PXREF|::|COMPACT| |PXREF|::|ROOT-NODES|)))
