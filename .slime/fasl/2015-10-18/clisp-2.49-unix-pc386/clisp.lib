#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|%IN-PACKAGE| "SWANK/CLISP" :|NICKNAMES| '|COMMON-LISP|::|NIL|
 :|USE| '|COMMON-LISP|::|NIL| :|CASE-SENSITIVE| |COMMON-LISP|::|NIL|
 :|CASE-INVERTED| |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|USE-PACKAGE| '("COMMON-LISP" "SWANK/BACKEND") "SWANK/CLISP")
(|COMMON-LISP|::|FIND-PACKAGE| "SWANK/CLISP")
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "SWANK/CLISP"))
(|COMMON-LISP|::|DEFVAR| |SWANK/CLISP|::|*HAVE-MOP*|
 (|COMMON-LISP|::|AND| (|COMMON-LISP|::|FIND-PACKAGE| :|CLOS|)
  (|COMMON-LISP|::|EQL| :|EXTERNAL|
   (|COMMON-LISP|::|NTH-VALUE| 1.
    (|COMMON-LISP|::|FIND-SYMBOL|
     (|COMMON-LISP|::|STRING| ':|STANDARD-SLOT-DEFINITION|) :|CLOS|))))
 "True in those CLISP images which have a complete MOP implementation.")
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*HAVE-MOP*|))
(|SYSTEM|::|C-DEFUN| '|SWANK-MOP|::|SLOT-DEFINITION-DOCUMENTATION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|PARSE-CYGWIN-FILENAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL|
   |SWANK/CLISP|::|*EXTERNAL-FORMAT-TO-CODING-SYSTEM*|))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|FSPEC-PATHNAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|SPEC|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|FSPEC-LOCATION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|NAME| |SWANK/CLISP|::|FSPEC|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|TRIM-WHITESPACE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*SLDB-BACKTRACE*|))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|SLDB-BACKTRACE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|NTH-FRAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|INDEX|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|BORING-FRAME-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|FRAME|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|FRAME-TO-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|FRAME|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|FRAME-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|FRAME|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*FRAME-PREFIXES*|))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|FRAME-STRING-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|EXTRACT-FRAME-LINE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|FRAME-STRING|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|EXTRACT-FUNCTION-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|SPLIT-FRAME-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|STRING-MATCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|PATTERN| |COMMON-LISP|::|STRING| |SWANK/CLISP|::|N|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|%FRAME-COUNT-VARS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|FRAME|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|%FRAME-VAR-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|FRAME| |SWANK/CLISP|::|I|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|%FRAME-VAR-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|FRAME| |SWANK/CLISP|::|I|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|FRAME-VENV|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|FRAME|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|NEXT-VENV|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|VENV|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|VENV-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|ENV| |SWANK/CLISP|::|I|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|%PARSE-STACK-VALUES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|FRAME|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|IS-PREFIX-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|REGEXP| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|SWANK/CLISP|::|COMPILE-FILE-FROBBING-NOTES|)
(|SYSTEM|::|%PUTD| '|SWANK/CLISP|::|COMPILE-FILE-FROBBING-NOTES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |SWANK/CLISP|::|COMPILE-FILE-FROBBING-NOTES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Pass ARGS to COMPILE-FILE, send the compiler notes to\n
*STANDARD-INPUT* and frob them in BODY."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G20563| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G20564| #1#) (|SWANK/CLISP|::|ARGS| #3#)
       (|SWANK/CLISP|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |SWANK/CLISP|::|COMPILE-FILE-FROBBING-NOTES|
       `(|COMMON-LISP|::|LET|
         ((|COMMON-LISP|::|*ERROR-OUTPUT*|
           (|COMMON-LISP|::|MAKE-STRING-OUTPUT-STREAM|))
          (|COMMON-LISP|::|*COMPILE-VERBOSE*| |COMMON-LISP|::|T|))
         (|COMMON-LISP|::|MULTIPLE-VALUE-PROG1|
          (|COMMON-LISP|::|COMPILE-FILE| ,@|SWANK/CLISP|::|ARGS|)
          (|COMMON-LISP|::|HANDLER-CASE|
           (|COMMON-LISP|::|WITH-INPUT-FROM-STRING|
            (|COMMON-LISP|::|*STANDARD-INPUT*|
             (|COMMON-LISP|::|GET-OUTPUT-STREAM-STRING|
              |COMMON-LISP|::|*ERROR-OUTPUT*|))
            ,@|SWANK/CLISP|::|BODY|)
           (|SYSTEM|::|SIMPLE-END-OF-FILE| |COMMON-LISP|::|NIL|
            |COMMON-LISP|::|NIL|)))))))))
  '((|COMMON-LISP|::|&REST| |SWANK/CLISP|::|ARGS|) |COMMON-LISP|::|&BODY|
    |SWANK/CLISP|::|BODY|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*ORIG-C-WARN*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*ORIG-C-STYLE-WARN*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*ORIG-C-ERROR*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*ORIG-C-REPORT-PROBLEMS*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|SWANK/CLISP|::|DYNAMIC-FLET|)
(|SYSTEM|::|%PUTD| '|SWANK/CLISP|::|DYNAMIC-FLET|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |SWANK/CLISP|::|DYNAMIC-FLET|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "(dynamic-flet ((NAME FUNCTION) ...) BODY ...)\n
Execute BODY with NAME's function slot set to FUNCTION."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SWANK/CLISP|::|NAMES-FUNCTIONS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SWANK/CLISP|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |SWANK/CLISP|::|DYNAMIC-FLET|
       `(|EXT|::|LETF*|
         ,(|COMMON-LISP|::|LOOP| |SWANK/CLISP|::|FOR|
           (|SWANK/CLISP|::|NAME| |COMMON-LISP|::|FUNCTION|)
           |SWANK/CLISP|::|IN| |SWANK/CLISP|::|NAMES-FUNCTIONS|
           |SWANK/CLISP|::|COLLECT|
           `((|COMMON-LISP|::|SYMBOL-FUNCTION| ',|SWANK/CLISP|::|NAME|)
             ,|COMMON-LISP|::|FUNCTION|))
         ,@|SWANK/CLISP|::|BODY|))))))
  '(|SWANK/CLISP|::|NAMES-FUNCTIONS| |COMMON-LISP|::|&BODY|
    |SWANK/CLISP|::|BODY|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*BUFFER-NAME*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SWANK/CLISP|::|*BUFFER-OFFSET*|))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|COMPILER-NOTE-LOCATION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|SIGNAL-COMPILER-WARNING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|CSTRING| |SWANK/CLISP|::|ARGS| |SWANK/BACKEND|::|SEVERITY|
    |SWANK/CLISP|::|ORIG-FN|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|C-WARN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|CSTRING| |COMMON-LISP|::|&REST| |SWANK/CLISP|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|C-STYLE-WARN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SWANK/CLISP|::|CSTRING| |COMMON-LISP|::|&REST| |SWANK/CLISP|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|C-ERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |SWANK/CLISP|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|HANDLE-NOTIFICATION-CONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|SWANK/CLISP|::|DEFXREF|)
(|SYSTEM|::|%PUTD| '|SWANK/CLISP|::|DEFXREF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |SWANK/CLISP|::|DEFXREF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SWANK/CLISP|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       #'(|COMMON-LISP|::|CADDR| . #1#))
      (|COMMON-LISP|::|BLOCK| |SWANK/CLISP|::|DEFXREF|
       `(|SWANK/BACKEND|::|DEFIMPLEMENTATION| ,|SWANK/CLISP|::|NAME|
         (|SWANK/CLISP|::|NAME|)
         (|SWANK/CLISP|::|XREF-RESULTS|
          (,|COMMON-LISP|::|FUNCTION| |SWANK/CLISP|::|NAME|))))))))
  '(|SWANK/CLISP|::|NAME| |COMMON-LISP|::|FUNCTION|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/CLISP|::|XREF-RESULTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SWANK/CLISP|::|SYMBOLS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|BREAK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| (|SWANK/CLISP|::|FORMAT-STRING| "Break")
    |COMMON-LISP|::|&REST| |SWANK/CLISP|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SWANK/BACKEND|::|EMACS-INSPECT|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
