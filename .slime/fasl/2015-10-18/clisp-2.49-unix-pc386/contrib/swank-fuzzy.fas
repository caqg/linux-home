(|SYSTEM|::|VERSION| '(20080430.))
#0Y_ #0Y |CHARSET|::|UTF-8|
#Y(#:|1 11 (IN-PACKAGE :SWANK)-1|
   #17Y(00 00 00 00 00 00 00 00 20 01 DA 31 F6 0F 01 19 01)
   ("SWANK" |COMMON-LISP|::|*PACKAGE*|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|13 15 (EVAL-WHEN (:COMPILE-TOPLEVEL :LOAD-TOPLEVEL :EXECUTE) (SWANK-REQUIRE :SWANK-UTIL) ...)-2-1|
   #16Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 3E 19 01)
   (:|SWANK-UTIL| |SWANK|::|SWANK-REQUIRE|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|13 15 (EVAL-WHEN (:COMPILE-TOPLEVEL :LOAD-TOPLEVEL :EXECUTE) (SWANK-REQUIRE :SWANK-UTIL) ...)-2-2|
   #15Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 19 01)
   (:|SWANK-C-P-C| |SWANK|::|SWANK-REQUIRE|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|17 20 (DEFVAR *FUZZY-DUPLICATE-SYMBOL-FILTER* :NEAREST-PACKAGE ...)-3|
   #30Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB DC 31 5A DB DD DE
        2D 03 05 C6 19 01)
   ((|COMMON-LISP|::|SPECIAL| |SWANK|::|*FUZZY-DUPLICATE-SYMBOL-FILTER*|)
    |SWANK|::|*FUZZY-DUPLICATE-SYMBOL-FILTER*| :|NEAREST-PACKAGE|
    |COMMON-LISP|::|VARIABLE|
    "Specifies how fuzzy-matching handles \"duplicate\" symbols.\n
Possible values are :NEAREST-PACKAGE, :HOME-PACKAGE, :ALL, or a custom\n
function. See Fuzzy Completion in the manual for details."
    |SYSTEM|::|%SET-DOCUMENTATION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|22 22 (EXPORT '*FUZZY-DUPLICATE-SYMBOL-FILTER*)-4|
   #17Y(00 00 00 00 00 00 00 00 20 01 DA 38 01 31 E6 19 01)
   (|SWANK|::|*FUZZY-DUPLICATE-SYMBOL-FILTER*|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|24 83 (DEFSLIMEFUN FUZZY-COMPLETIONS (STRING DEFAULT-PACKAGE-NAME &KEY ...) ...)-5-1|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C 3E 19 01)
   (|SWANK|::|FUZZY-COMPLETIONS| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-COMPLETIONS|
       #54Y(00 00 00 00 02 00 00 00 A6 1D 02 00 00 00 3D 02 3D 01 9E 59 1C 03
            AD 32 AC 14 92 00 16 9F 14 B2 B2 DA B3 DB B1 2D 06 02 42 02 AD DD
            72 3B AD 61 02 19 09 00 1B 68)
       (:|LIMIT| :|TIME-LIMIT-IN-MSEC| |SWANK|::|FUZZY-COMPLETION-SET|
        |COMMON-LISP|::|LIST|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|STRING| |SWANK|::|DEFAULT-PACKAGE-NAME|
        |COMMON-LISP|::|&KEY| |SWANK|::|LIMIT| |SWANK|::|TIME-LIMIT-IN-MSEC|)
       "Returns a list of two values:\n\n
  An (optionally limited to LIMIT best results) list of fuzzy\n
  completions for a symbol designator STRING. The list will be\n
  sorted by score, most likely match first.\n\n
  A flag that indicates whether or not TIME-LIMIT-IN-MSEC has\n
  been exhausted during computation. If that parameter's value is\n
  NIL or 0, no time limit is assumed.\n\n
The main result is a list of completion objects, where a completion\n
object is:\n\n
    (COMPLETED-STRING SCORE (&rest CHUNKS) CLASSIFICATION-STRING)\n\n
where a CHUNK is a description of a matched substring:\n\n
    (OFFSET SUBSTRING)\n\n
and FLAGS is short string describing properties of the symbol (see\n
SYMBOL-CLASSIFICATION-STRING).\n\n
E.g., completing \"mvb\" in a package that uses COMMON-LISP would\n
return something like:\n\n
    ((\"multiple-value-bind\" 26.588236 ((0 \"m\") (9 \"v\") (15 \"b\"))\n
     (:FBOUNDP :MACRO))\n
     ...)\n\n
If STRING is package qualified the result list will also be\n
qualified.  If string is non-qualified the result strings are\n
also not qualified and are considered relative to\n
DEFAULT-PACKAGE-NAME.\n\n
Which symbols are candidates for matching depends on the symbol\n
designator's format. The cases are as follows:\n
  FOO      - Symbols accessible in the buffer package.\n
  PKG:FOO  - Symbols external in package PKG.\n
  PKG::FOO - Symbols accessible in package PKG."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|24 83 (DEFSLIMEFUN FUZZY-COMPLETIONS (STRING DEFAULT-PACKAGE-NAME &KEY ...) ...)-5-2|
   #18Y(00 00 00 00 00 00 00 00 20 01 DA DA 72 A4 31 E6 19 01)
   (|SWANK|::|FUZZY-COMPLETIONS|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|86 103 (DEFSTRUCT (FUZZY-MATCHING # # ...) SYMBOL ...)-6|
   #897Y(00 00 00 00 00 00 00 00 20 01 00 2B 01 DA DB DC 38 01 72 9E 2F 03 5D
         0B 00 00 DA 2F 04 DA DF 32 A3 DA 68 01 00 63 E0 E1 E2 6B 09 E4 E5 E6
         E7 E8 64 E9 EA EB 01 02 6F 12 70 13 EE EF F0 F1 F2 63 6E 11 19 6B 09
         E4 F4 E6 F5 E8 64 E9 EA EB 01 02 6F 12 70 13 EE F6 F0 F7 F2 63 6E 11
         19 6B 09 E4 65 1E E6 65 1F E8 64 E9 EA EB 01 02 6F 12 70 13 EE 65 20
         F0 65 21 F2 63 6E 11 19 6B 09 E4 65 22 E6 65 23 E8 64 E9 EA EB 01 02
         6F 12 70 13 EE 65 24 F0 65 25 F2 63 6E 11 19 6B 09 E4 65 26 E6 65 27
         E8 64 E9 EA EB 01 02 6F 12 70 13 EE 65 28 F0 65 29 F2 63 6E 11 19 6B
         09 E4 65 2A E6 65 2B E8 64 E9 EA EB 01 02 6F 12 70 13 EE 65 2C F0 65
         2D F2 63 6E 11 19 7B 06 6B 2E E4 E5 E6 E7 E8 64 E9 EA EB 01 02 6F 12
         70 13 EE 65 2F 65 30 65 31 65 32 65 33 6E 11 34 6B 2E E4 F4 E6 F5 E8
         64 E9 EA EB 01 02 6F 12 70 13 EE 65 35 65 30 65 36 65 32 65 37 6E 11
         34 6B 2E E4 65 1E E6 65 1F E8 64 E9 EA EB 01 02 6F 12 70 13 EE 65 38
         65 30 65 39 65 32 65 3A 6E 11 34 6B 2E E4 65 22 E6 65 23 E8 64 E9 EA
         EB 01 02 6F 12 70 13 EE 65 3B 65 30 65 3C 65 32 65 3D 6E 11 34 6B 2E
         E4 65 26 E6 65 27 E8 64 E9 EA EB 01 02 6F 12 70 13 EE 65 3E 65 30 65
         3F 65 32 65 40 6E 11 34 6B 2E E4 65 2A E6 65 2B E8 64 E9 EA EB 01 02
         6F 12 70 13 EE 65 41 65 30 65 42 65 32 65 43 6E 11 34 7B 06 2D 08 44
         65 45 2F 46 65 45 AD 6D 47 01 32 9C 16 01 65 48 31 62 E2 2F 46 E2 65
         49 65 4A 32 A2 E2 65 4B 32 9C 65 4C 31 62 E1 2F 46 E1 65 49 65 4D 32
         A2 E1 65 4E 32 9C 65 4F 31 62 65 50 31 62 65 51 2F 46 65 51 65 49 65
         52 32 A2 65 51 65 53 32 9C 65 51 65 54 DA 32 A2 65 55 31 62 65 56 31
         62 65 57 2F 46 65 57 65 49 65 58 32 A2 65 57 65 59 32 9C 65 57 65 54
         DA 32 A2 65 5A 31 62 65 5B 31 62 65 5C 2F 46 65 5C 65 49 65 5D 32 A2
         65 5C 65 5E 32 9C 65 5C 65 54 DA 32 A2 65 5F 31 62 65 60 31 62 65 61
         2F 46 65 61 65 49 65 62 32 A2 65 61 65 63 32 9C 65 61 65 54 DA 32 A2
         65 64 31 62 65 65 31 62 65 66 2F 46 65 66 65 49 65 67 32 A2 65 66 65
         68 32 9C 65 66 65 54 DA 32 A2 65 69 31 62 65 6A 31 62 65 6B 2F 46 65
         6B 65 49 65 6C 32 A2 65 6B 65 6D 32 9C 65 6B 65 54 DA 32 A2 65 6E 31
         62 65 6F 31 62 65 70 2F 46 65 70 65 49 65 71 32 A2 65 70 65 72 32 9C
         65 51 65 73 DA 32 A2 65 74 31 62 65 75 31 62 65 76 2F 46 65 76 65 49
         65 77 32 A2 65 76 65 78 32 9C 65 57 65 73 DA 32 A2 65 79 31 62 65 7A
         31 62 65 7B 2F 46 65 7B 65 49 65 7C 32 A2 65 7B 65 7D 32 9C 65 5C 65
         73 DA 32 A2 65 7E 31 62 65 7F 31 62 65 80 80 2F 46 65 80 80 65 49 65
         80 81 32 A2 65 80 80 65 80 82 32 9C 65 61 65 73 DA 32 A2 65 80 83 31
         62 65 80 84 31 62 65 80 85 2F 46 65 80 85 65 49 65 80 86 32 A2 65 80
         85 65 80 87 32 9C 65 66 65 73 DA 32 A2 65 80 88 31 62 65 80 89 31 62
         65 80 8A 2F 46 65 80 8A 65 49 65 80 8B 32 A2 65 80 8A 65 80 8C 32 9C
         65 6B 65 73 DA 32 A2 DA 65 80 8D 63 2D 03 80 8E DA 2F 80 8F C5 19 01)
   (|SWANK|::|FUZZY-MATCHING| |COMMON-LISP|::|STRUCTURE-OBJECT|
    |CLOS|::|CLOSCLASS| |CLOS|::|CLASS-NAMES|
    |SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES|
    |SYSTEM|::|DEFSTRUCT-DESCRIPTION| (|SWANK|::|MAKE-FUZZY-MATCHING|)
    |SWANK|::|COPY-FUZZY-MATCHING| |SWANK|::|FUZZY-MATCHING-P|
    |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
    |COMMON-LISP|::|SYMBOL| :|INITARGS| (:|SYMBOL|) :|TYPE| :|ALLOCATION|
    :|INSTANCE| |CLOS|::|INHERITABLE-INITER|
    |SYSTEM|::|MAKE-CONSTANT-INITFUNCTION|
    |CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| |CLOS|::|INHERITABLE-DOC|
    (|COMMON-LISP|::|NIL|) |CLOS|::|LOCATION| 1. |CLOS|::|READONLY|
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
    |SWANK|::|SYMBOL-P| (:|SYMBOL-P|) (|COMMON-LISP|::|NIL|) 2.
    |COMMON-LISP|::|PACKAGE-NAME| (:|PACKAGE-NAME|) (|COMMON-LISP|::|NIL|) 3.
    |SWANK|::|SCORE| (:|SCORE|) (|COMMON-LISP|::|NIL|) 4.
    |SWANK|::|PACKAGE-CHUNKS| (:|PACKAGE-CHUNKS|) (|COMMON-LISP|::|NIL|) 5.
    |SWANK|::|SYMBOL-CHUNKS| (:|SYMBOL-CHUNKS|) (|COMMON-LISP|::|NIL|) 6.
    |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| (|COMMON-LISP|::|NIL|)
    :|READERS| (|SWANK|::|FUZZY-MATCHING.SYMBOL|) :|WRITERS|
    ((|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL|))
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
    (|COMMON-LISP|::|NIL|) (|SWANK|::|FUZZY-MATCHING.SYMBOL-P|)
    ((|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|))
    (|COMMON-LISP|::|NIL|) (|SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|)
    ((|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|))
    (|COMMON-LISP|::|NIL|) (|SWANK|::|FUZZY-MATCHING.SCORE|)
    ((|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SCORE|))
    (|COMMON-LISP|::|NIL|) (|SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|)
    ((|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|))
    (|COMMON-LISP|::|NIL|) (|SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|)
    ((|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|))
    |CLOS|::|DEFINE-STRUCTURE-CLASS| |SWANK|::|MAKE-FUZZY-MATCHING|
    |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|MAKE-FUZZY-MATCHING|
       #64Y(00 00 00 00 05 00 00 00 A6 00 01 00 01 00 3B 01 02 7E 01 69 00 01
            DC 72 45 DD AD DE B6 32 44 DD AD DF B1 32 44 DD AD E0 B5 32 44 DD
            AD E1 B4 32 44 DD AD E2 B3 32 44 DD AD E3 B2 32 44 15 19 07)
       (|COMMON-LISP|::|NIL| :|SYMBOL-P| 7. |SWANK|::|FUZZY-MATCHING| 1. 2. 3.
        4. 5. 6.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|SYMBOL| |COMMON-LISP|::|PACKAGE-NAME| |SWANK|::|SCORE|
        |SWANK|::|PACKAGE-CHUNKS| |SWANK|::|SYMBOL-CHUNKS|
        |COMMON-LISP|::|&KEY| (|SWANK|::|SYMBOL-P| |COMMON-LISP|::|T|)
        |COMMON-LISP|::|&AUX|)
       |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|INLINE| |SWANK|::|FUZZY-MATCHING-P|)
    |SYSTEM|::|INLINE-EXPANSION|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|FUZZY-MATCHING-P|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING-P|
      (|SYSTEM|::|%STRUCTURE-TYPE-P| '|SWANK|::|FUZZY-MATCHING|
       |SYSTEM|::|OBJECT|)))
    #Y(|SWANK|::|FUZZY-MATCHING-P|
       #16Y(00 00 00 00 01 00 00 00 20 02 DA AE 32 47 19 02)
       (|SWANK|::|FUZZY-MATCHING|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|INLINE| |SWANK|::|COPY-FUZZY-MATCHING|)
    ((|COMMON-LISP|::|STRUCTURE|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|COPY-FUZZY-MATCHING|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|COPY-FUZZY-MATCHING|
      (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|)))
    #Y(|SWANK|::|COPY-FUZZY-MATCHING|
       #15Y(00 00 00 00 01 00 00 00 26 02 AD 32 46 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|STRUCTURE|) |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|FUNCTION| |SWANK|::|FUZZY-MATCHING.SYMBOL|
     (|SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |SWANK|::|FUZZY-MATCHING.SYMBOL|)
    |SWANK|::|FUZZY-MATCHING.SYMBOL|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|FUZZY-MATCHING.SYMBOL|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SYMBOL|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|SWANK|::|FUZZY-MATCHING|
        |SYSTEM|::|OBJECT| 1.))))
    #Y(|SWANK|::|FUZZY-MATCHING.SYMBOL|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|SWANK|::|FUZZY-MATCHING| 1.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    |SYSTEM|::|DEFSTRUCT-READER|
    (|COMMON-LISP|::|FUNCTION| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|
     (|SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|)
    |SWANK|::|FUZZY-MATCHING.SYMBOL-P|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|SWANK|::|FUZZY-MATCHING|
        |SYSTEM|::|OBJECT| 2.))))
    #Y(|SWANK|::|FUZZY-MATCHING.SYMBOL-P|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|SWANK|::|FUZZY-MATCHING| 2.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|
     (|SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|)
    |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|SWANK|::|FUZZY-MATCHING|
        |SYSTEM|::|OBJECT| 3.))))
    #Y(|SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|SWANK|::|FUZZY-MATCHING| 3.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION| |SWANK|::|FUZZY-MATCHING.SCORE|
     (|SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |SWANK|::|FUZZY-MATCHING.SCORE|)
    |SWANK|::|FUZZY-MATCHING.SCORE|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|FUZZY-MATCHING.SCORE|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SCORE|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|SWANK|::|FUZZY-MATCHING|
        |SYSTEM|::|OBJECT| 4.))))
    #Y(|SWANK|::|FUZZY-MATCHING.SCORE|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|SWANK|::|FUZZY-MATCHING| 4.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|
     (|SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|)
    |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|SWANK|::|FUZZY-MATCHING|
        |SYSTEM|::|OBJECT| 5.))))
    #Y(|SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|SWANK|::|FUZZY-MATCHING| 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|
     (|SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|)
    |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|SWANK|::|FUZZY-MATCHING|
        |SYSTEM|::|OBJECT| 6.))))
    #Y(|SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|SWANK|::|FUZZY-MATCHING| 6.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL|)
     (|COMMON-LISP|::|T| |SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|SWANK|::|FUZZY-MATCHING.SYMBOL|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #1=(|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL|)))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SYMBOL|
      (|SYSTEM|::|%STRUCTURE-STORE| '|SWANK|::|FUZZY-MATCHING|
       |SYSTEM|::|OBJECT| 1. |SYSTEM|::|VALUE|)))
    #Y(#1# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|SWANK|::|FUZZY-MATCHING| 1.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |SYSTEM|::|DEFSTRUCT-WRITER|
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|)
     (|COMMON-LISP|::|T| |SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|SWANK|::|FUZZY-MATCHING.SYMBOL-P|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #2=(|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|)))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SYMBOL-P|
      (|SYSTEM|::|%STRUCTURE-STORE| '|SWANK|::|FUZZY-MATCHING|
       |SYSTEM|::|OBJECT| 2. |SYSTEM|::|VALUE|)))
    #Y(#2# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|SWANK|::|FUZZY-MATCHING| 2.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|)
     (|COMMON-LISP|::|T| |SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #3=(|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|)))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|
      (|SYSTEM|::|%STRUCTURE-STORE| '|SWANK|::|FUZZY-MATCHING|
       |SYSTEM|::|OBJECT| 3. |SYSTEM|::|VALUE|)))
    #Y(#3# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|SWANK|::|FUZZY-MATCHING| 3.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SCORE|)
     (|COMMON-LISP|::|T| |SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SCORE|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|SWANK|::|FUZZY-MATCHING.SCORE|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #4=(|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SCORE|)))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SCORE|
      (|SYSTEM|::|%STRUCTURE-STORE| '|SWANK|::|FUZZY-MATCHING|
       |SYSTEM|::|OBJECT| 4. |SYSTEM|::|VALUE|)))
    #Y(#4# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|SWANK|::|FUZZY-MATCHING| 4.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|)
     (|COMMON-LISP|::|T| |SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #5=(|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|)))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.PACKAGE-CHUNKS|
      (|SYSTEM|::|%STRUCTURE-STORE| '|SWANK|::|FUZZY-MATCHING|
       |SYSTEM|::|OBJECT| 5. |SYSTEM|::|VALUE|)))
    #Y(#5# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|SWANK|::|FUZZY-MATCHING| 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|)
     (|COMMON-LISP|::|T| |SWANK|::|FUZZY-MATCHING|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #6=(|COMMON-LISP|::|SETF| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|)))
     (|COMMON-LISP|::|BLOCK| |SWANK|::|FUZZY-MATCHING.SYMBOL-CHUNKS|
      (|SYSTEM|::|%STRUCTURE-STORE| '|SWANK|::|FUZZY-MATCHING|
       |SYSTEM|::|OBJECT| 6. |SYSTEM|::|VALUE|)))
    #Y(#6# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|SWANK|::|FUZZY-MATCHING| 6.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |COMMON-LISP|::|TYPE| |SYSTEM|::|%SET-DOCUMENTATION|
    |CLOS|::|DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|103 130 (DEFUN %FUZZY-EXTRACT-MATCHING-INFO (FUZZY-MATCHING USER-INPUT-STRING) ...)-7|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|%FUZZY-EXTRACT-MATCHING-INFO| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|%FUZZY-EXTRACT-MATCHING-INFO|
       #94Y(00 00 00 00 02 00 00 00 26 03 AD 63 30 00 42 04 01 03 DB B6 DC 8E
            43 25 CB FA DB B6 DF 81 43 01 92 05 37 F8 AE AE 93 07 01 9F 14 B7
            6F 07 B8 6F 08 40 05 19 0A C9 F9 1B 6B 7D 01 1B 67 DB B6 DD 72 43
            81 A6 02 A0 F8 DB B6 DD 72 43 8E A8 66 93 05 67 DB B6 DF 81 43 01
            1B 4A A0 F8 1B 46)
       (|SWANK|::|PARSE-COMPLETION-ARGUMENTS| |SWANK|::|FUZZY-MATCHING| 2. 1.
        "" 3. "" |SWANK|::|COMPLETION-OUTPUT-SYMBOL-CONVERTER|
        |SWANK|::|COMPLETION-OUTPUT-PACKAGE-CONVERTER|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|FUZZY-MATCHING| |SWANK|::|USER-INPUT-STRING|)
       |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|132 143 (DEFUN FUZZY-FORMAT-MATCHING (FUZZY-MATCHING USER-INPUT-STRING) ...)-8|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FUZZY-FORMAT-MATCHING| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-FORMAT-MATCHING|
       #49Y(00 00 00 00 02 00 00 00 26 03 AE AE 30 00 42 05 93 04 04 AD B1 36
            01 FC 93 03 04 AC B0 36 01 FB 14 AF B2 6E 03 01 AC B2 AE 38 08 72
            81 40 02 19 09)
       (|SWANK|::|%FUZZY-EXTRACT-MATCHING-INFO| |SWANK|::|UNTOKENIZE-SYMBOL|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|FUZZY-MATCHING| |SWANK|::|USER-INPUT-STRING|)
       "Returns the completion (\"foo:bar\") that's represented by FUZZY-MATCHING."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|145 168 (DEFUN FUZZY-CONVERT-MATCHING-FOR-EMACS (FUZZY-MATCHING USER-INPUT-STRING) ...)-9|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FUZZY-CONVERT-MATCHING-FOR-EMACS|
    |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-CONVERT-MATCHING-FOR-EMACS|
       #113Y(00 00 00 00 02 00 00 00 26 03 AE AE 30 00 42 02 AD 38 02 72 8F DB
             B3 DC 72 43 AD 01 03 DD 01 03 B4 2D 09 04 16 01 AC 81 90 00 DB B3
             DF 72 43 63 DB B5 E0 72 43 1B 21 DB B4 E1 72 43 2F 08 1B 2C 94 00
             94 00 9E 5C 78 B4 AE 73 02 37 AD 61 02 16 01 F8 84 02 16 01 83 00
             AC 8D 9F 64 16 01 AC 80 B1 00 73 02 23 DB B4 DD 8E 43 4C CE 14 61
             04 19 05)
       (|SWANK|::|FUZZY-FORMAT-MATCHING| |SWANK|::|FUZZY-MATCHING| 4. 2.
        |SYSTEM|::|DO-FORMAT-FIXED-FLOAT| 5. 6. 1.
        |SWANK|::|SYMBOL-CLASSIFICATION-STRING| "-------p")
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|FUZZY-MATCHING| |SWANK|::|USER-INPUT-STRING|)
       "Converts a result from the fuzzy completion core into something\n
that emacs is expecting.  Converts symbols to strings, fixes case\n
issues, and adds information (as a string) describing if the symbol is\n
bound, fbound, a class, a macro, a generic-function, a\n
special-operator, or a package."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|170 192 (DEFUN FUZZY-COMPLETION-SET (STRING DEFAULT-PACKAGE-NAME &KEY ...) ...)-10|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FUZZY-COMPLETION-SET| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-COMPLETION-SET|
       #186Y(00 00 00 00 02 00 00 00 A6 1D 02 00 00 00 00 2B 03 7F 05 00 00 3B
             03 01 00 0B 00 01 3B 02 0A 00 0B 00 02 1B 07 16 01 1B 3E 0B 00 02
             68 00 01 93 00 73 AC 8F 1E 0A AC 8E AE 06 DC AD 90 01 34 65 DD AD
             AF 6D 04 01 DF 63 E0 2D 06 07 16 01 1B 5C AD 68 03 01 31 19 1B 80
             52 E2 AD AF 6D 09 01 DF 63 E4 2D 06 07 16 01 68 00 02 93 00 0E AC
             8F 1E 68 AC 8E AE 64 DC AD 91 01 34 5E 16 01 68 00 00 B1 68 02 02
             2D 03 0B 42 02 06 02 01 1D 1D 14 8F AD 19 68 02 01 AE 72 62 91 01
             31 0F AD 8C 17 FF AF 68 02 01 38 07 A6 F9 80 1D 01 AD AF 6D 0C 01
             AF 33 01 28 AD AD 40 02 19 08)
       (:|LIMIT| :|TIME-LIMIT-IN-MSEC| 281474976710654. |SWANK|::|LIMIT|
        #Y(|SWANK|::|FUZZY-COMPLETION-SET-1|
           #16Y(00 00 00 00 01 00 00 00 20 02 9E 0C 00 02 19 02)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        1.
        (|COMMON-LISP|::|OR| |COMMON-LISP|::|NULL|
         (|COMMON-LISP|::|INTEGER| 0. 281474976710654.))
        |SYSTEM|::|CHECK-TYPE-FAILED| |SWANK|::|TIME-LIMIT-IN-MSEC|
        #Y(|SWANK|::|FUZZY-COMPLETION-SET-2|
           #16Y(00 00 00 00 01 00 00 00 20 02 9E 0C 00 03 19 02)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        (|COMMON-LISP|::|OR| |COMMON-LISP|::|NULL|
         (|COMMON-LISP|::|INTEGER| 0. 281474976710654.))
        |SWANK|::|FUZZY-GENERATE-MATCHINGS|
        #Y(|SWANK|::|FUZZY-COMPLETION-SET-3|
           #18Y(00 00 00 00 01 00 00 00 26 02 AD 69 00 01 30 01 19 02)
           (|COMMON-LISP|::|NIL| |SWANK|::|FUZZY-CONVERT-MATCHING-FOR-EMACS|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|M|) |COMMON-LISP|::|NIL| 1))
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|STRING| |SWANK|::|DEFAULT-PACKAGE-NAME|
        |COMMON-LISP|::|&KEY| |SWANK|::|LIMIT| |SWANK|::|TIME-LIMIT-IN-MSEC|)
       "Returns two values: an array of completion objects, sorted by\n
their score, that is how well they are a match for STRING\n
according to the fuzzy completion algorithm.  If LIMIT is set,\n
only the top LIMIT results will be returned. Additionally, a flag\n
is returned that indicates whether or not TIME-LIMIT-IN-MSEC was\n
exhausted."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|195 287 (DEFUN FUZZY-GENERATE-MATCHINGS (STRING DEFAULT-PACKAGE-NAME TIME-LIMIT-IN-MSEC) ...)-11|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FUZZY-GENERATE-MATCHINGS| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-GENERATE-MATCHINGS|
       #239Y(00 00 00 00 03 00 00 00 26 04 AF AF 30 00 42 04 00 2B 02 7F 04 00
             00 7F 01 00 01 AC 6D 01 01 AD 6D 02 01 B4 01 03 38 09 C8 FB 71 6D
             92 0A 1E 68 07 00 B1 C9 34 42 02 6A 05 6A 02 68 07 00 B6 B2 38 01
             A6 34 42 02 6A 05 6A 03 1B 80 86 B6 DF 38 04 8C 35 67 B6 BA C9 34
             42 02 AD 99 06 38 03 81 82 01 E1 01 02 1B 0B A1 FF 16 05 1B 80 65
             16 03 85 02 AE B1 72 62 90 01 34 80 4B B0 AF 82 01 01 01 E2 AE E3
             72 43 80 D9 00 93 09 04 AF 8F AD 36 68 0C 00 AD B1 B0 B4 B6 6E 03
             0A AB 34 42 02 AD B0 04 0F 34 F9 E5 B7 AF 82 02 26 0A 9D FD B6 72
             62 6F 0C 93 06 FF B7 14 AD 91 01 33 FF B0 B2 AD 82 01 38 06 16 03
             A0 09 09 68 0C 00 E7 8E 14 FF 96 16 05 E5 B0 B0 82 02 26 01 14 99
             06 38 03 81 82 01 14 93 05 04 14 32 AD 59 14 40 02 19 10)
       (|SWANK|::|PARSE-COMPLETION-ARGUMENTS|
        #Y(|SWANK|::|FUZZY-GENERATE-MATCHINGS-FIX-UP|
           #48Y(00 00 00 00 02 00 00 00 26 03 2A 2B 03 DB AF DC 32 43 0B 00 00
                DB AF DD 32 43 0B 00 01 DB AF DE 32 43 0B 00 02 AF AD 6D 05 01
                B1 33 01 28 19 04)
           (|COMMON-LISP|::|NIL| |SWANK|::|FUZZY-MATCHING| 3. 4. 5.
            #Y(|SWANK|::|FUZZY-GENERATE-MATCHINGS-FIX-UP-1|
               #72Y(00 00 00 00 01 00 00 00 26 02 DB AE DC 72 43 69 00 01 DB B0
                    DD AF 32 44 16 01 69 00 03 DB B0 DE AF 32 44 16 01 69 01 01
                    DF 8E 14 13 69 00 02 AD 33 02 37 14 DB B0 DC AF 32 44 16 01
                    9F 19 03 E0 69 00 02 33 02 39 1B 6B)
               (|COMMON-LISP|::|NIL| |SWANK|::|FUZZY-MATCHING| 4. 3. 5. ""
                #10r1/100)
               (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
               (|SWANK|::|M|) |COMMON-LISP|::|NIL| 1))
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|MATCHINGS| |SWANK|::|PARENT-PACKAGE-MATCHING|)
           |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|FUZZY-GENERATE-MATCHINGS-FIND-SYMBOLS|
           #33Y(00 00 00 00 03 00 01 00 26 0A 3D 01 B0 B0 DB B1 DC 07 00 02 59
                14 DD 92 08 01 C9 14 2D 08 05 19 05)
           (|COMMON-LISP|::|NIL| :|TIME-LIMIT-IN-MSEC| :|EXTERNAL-ONLY|
            :|FILTER| #.#'|COMMON-LISP|::|IDENTITY|
            |SWANK|::|FUZZY-FIND-MATCHING-SYMBOLS|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|DESIGNATOR| |COMMON-LISP|::|PACKAGE|
            |SWANK|::|TIME-LIMIT| |COMMON-LISP|::|&OPTIONAL| |SWANK|::|FILTER|)
           |COMMON-LISP|::|NIL| 1)
        #.#'|COMMON-LISP|::|EQUAL|
        #Y(|SWANK|::|FUZZY-GENERATE-MATCHINGS-FIND-PACKAGES|
           #18Y(00 00 00 00 02 00 00 00 26 03 AE DA AF 2D 03 01 19 03)
           (:|TIME-LIMIT-IN-MSEC| |SWANK|::|FUZZY-FIND-MATCHING-PACKAGES|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|DESIGNATOR| |SWANK|::|TIME-LIMIT|) |COMMON-LISP|::|NIL|
           1)
        "" |SWANK|::|FUZZY-MATCHING-GREATERP| 0. |SWANK|::|FUZZY-MATCHING| 3.
        |SWANK|::|%MAKE-DUPLICATE-SYMBOLS-FILTER| |COMMON-LISP|::|VECTOR|
        |SWANK|::|%GUESS-SORT-DURATION| "")
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|STRING| |SWANK|::|DEFAULT-PACKAGE-NAME|
        |SWANK|::|TIME-LIMIT-IN-MSEC|)
       "Does all the hard work for FUZZY-COMPLETION-SET. If\n
TIME-LIMIT-IN-MSEC is NIL, an infinite time limit is assumed."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|289 297 (DEFUN %GUESS-SORT-DURATION (LENGTH) ...)-12|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|%GUESS-SORT-DURATION| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|%GUESS-SORT-DURATION|
       #43Y(00 00 00 00 01 00 00 00 26 02 AD 8E AC 1A DB AE AF DC 72 B6 73 02
            39 73 02 39 DD AD DE DF 72 B5 73 02 39 33 02 39 19 03 C5 19 02)
       (0. 3.8f0 2. 1000. 10. -7.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|LENGTH|) |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|297 332 (DEFUN %MAKE-DUPLICATE-SYMBOLS-FILTER (CURRENT-PACKAGE-MATCHING FUZZY-PACKAGE-MATCHINGS DEDUP-TABLE) ...)-13|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|%MAKE-DUPLICATE-SYMBOLS-FILTER|
    |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|%MAKE-DUPLICATE-SYMBOLS-FILTER|
       #117Y(00 00 00 00 03 00 00 00 26 04 00 2B 01 7F 02 00 00 0E 00 26 01 80
             50 9D 2B 01 63 B2 B2 DC 72 3B 38 07 72 69 1B 0F 94 00 DD AD DE 72
             43 71 D9 84 02 16 01 83 00 AC 8D 9F 6D 16 01 AC 31 B1 16 01 0B 00
             00 AC 2C 05 01 19 06 AC 2C 06 01 19 05 CC 19 05 6B 00 DD B3 DE 72
             43 DC 99 08 B4 73 00 27 68 04 00 36 03 19 06 6B 00 AC 8E 2F 65 E3
             6B 00 30 0A CC 19 06)
       (|SWANK|::|*FUZZY-DUPLICATE-SYMBOL-FILTER*|
        #S(|COMMON-LISP|::|HASH-TABLE| :|TEST| |EXT|::|STABLEHASH-EQ|
           (:|ALL| . 58.) (:|NEAREST-PACKAGE| . 52.) (:|HOME-PACKAGE| . 2.))
        |COMMON-LISP|::|LIST| |SWANK|::|FUZZY-MATCHING| 3.
        #Y(|SWANK|::|%MAKE-DUPLICATE-SYMBOLS-FILTER-1|
           #23Y(00 00 00 00 01 00 00 00 26 02 AD 72 A4 69 00 01 38 03 31 C1 59
                19 02)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|SYMBOL|) |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|%MAKE-DUPLICATE-SYMBOLS-FILTER-2|
           #37Y(00 00 00 00 01 00 00 00 26 02 AD 72 A6 69 00 01 38 01 8C 6E 0D
                AD 72 A6 69 00 01 AD AD 64 31 6F 19 04 00 19 02)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|SYMBOL|) |COMMON-LISP|::|NIL| 1)
        #.#'|COMMON-LISP|::|IDENTITY| |SWANK|::|FUZZY-MATCHING.PACKAGE-NAME|
        "bad *FUZZY-DUPLICATE-SYMBOL-FILTER* value: ~s" |COMMON-LISP|::|WARN|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|CURRENT-PACKAGE-MATCHING| |SWANK|::|FUZZY-PACKAGE-MATCHINGS|
        |SWANK|::|DEDUP-TABLE|)
       |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|334 347 (DEFUN FUZZY-MATCHING-GREATERP (M1 M2) ...)-14|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FUZZY-MATCHING-GREATERP| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-MATCHING-GREATERP|
       #60Y(00 00 00 00 02 00 00 00 26 03 DA AF DB 72 43 DA AF DB 72 43 AD AD
            90 01 32 1C AD AD 90 01 31 19 DA B1 DC 72 43 72 A6 DA B1 DC 72 43
            72 A6 AD AD 38 04 31 39 19 07 02 19 05 00 19 05)
       (|SWANK|::|FUZZY-MATCHING| 4. 1.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|SWANK|::|M1| |SWANK|::|M2|)
       "Returns T if fuzzy-matching M1 should be sorted before M2.\n
Basically just the scores of the two matchings are compared, and\n
the match with higher score wins. For the case that the score is\n
equal, the one which comes alphabetically first wins."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|349 349 (DECLAIM (FTYPE # GET-REAL-TIME-MSECS))-15|
   #15Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 19 01)
   ((|COMMON-LISP|::|FTYPE|
     (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|INTEGER| 0.))
     |SWANK|::|GET-REAL-TIME-MSECS|))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|350 352 (DEFUN GET-REAL-TIME-IN-MSECS NIL ...)-16|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|GET-REAL-TIME-IN-MSECS| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|GET-REAL-TIME-IN-MSECS|
       #23Y(00 00 00 00 00 00 00 00 26 01 DA DB 73 01 35 71 D5 AD 32 CE 3F 19
            02)
       (1. 1000.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|) ()
       |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|354 413 (DEFUN FUZZY-FIND-MATCHING-SYMBOLS (STRING PACKAGE &KEY ...) ...)-17|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FUZZY-FIND-MATCHING-SYMBOLS| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-FIND-MATCHING-SYMBOLS|
       #146Y(02 00 01 00 02 00 00 00 A6 1D 03 00 00 00 00 2B 04 7F 06 00 00 7F
             05 00 01 3B 04 01 C8 0B 00 02 3B 03 01 00 0B 00 03 3D 02 9D 2B 05
             93 03 01 02 0B 00 00 92 03 01 C9 0B 00 01 2E 05 0B 00 02 68 01 01
             31 DA 0B 00 03 C9 0B 00 04 9D 2B 01 AC 2C 06 01 0B 00 00 9D 2B 02
             E1 64 38 06 C9 FA 31 1D 0B 00 00 06 02 01 0B 00 01 9D 2B 01 38 09
             CD FB 31 6D 0B 00 00 47 09 0E 68 07 01 B0 B0 6D 0A 02 AD 31 F3 16
             01 48 16 01 68 00 00 68 01 01 40 02 19 0A)
       (:|FILTER| :|EXTERNAL-ONLY| :|TIME-LIMIT-IN-MSEC|
        #.#'|COMMON-LISP|::|IDENTITY| 0. |SWANK|::|GET-REAL-TIME-IN-MSECS|
        #Y(|SWANK|::|FUZZY-FIND-MATCHING-SYMBOLS-RECOMPUTE-REMAINING-TIME|
           #69Y(00 00 00 00 01 00 00 00 26 02 07 01 01 1D 18 69 01 05 8F AD 16
                69 01 05 72 B1 DB 32 D2 0C 01 05 63 9F 14 40 02 19 02 63 00 1B
                77 2E 02 14 69 01 03 73 01 38 69 01 02 AD 73 01 38 AC 32 AD 59
                14 AD 40 02 19 04)
           (|COMMON-LISP|::|NIL| 128. |SWANK|::|GET-REAL-TIME-IN-MSECS|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|OLD-REMAINING-TIME|) |COMMON-LISP|::|NIL| 1)
        256. #.#'|COMMON-LISP|::|EQ| |COMMON-LISP|::|NIL|
        #Y(|SWANK|::|FUZZY-FIND-MATCHING-SYMBOLS-1|
           #142Y(00 00 00 00 01 00 00 00 26 02 AD 69 00 01 38 01 8C 6E 30 69 00
                 01 AE AD 64 31 6F 16 01 69 01 02 07 02 01 34 42 02 9D 0C 01 02
                 92 01 19 07 04 04 1D 07 AF 69 04 02 8B 02 08 69 04 03 B0 36 01
                 1C 32 16 02 00 19 02 3E 49 01 AF 69 03 04 DE 01 02 6E 05 05 69
                 01 01 38 01 31 1C 16 02 1B 65 B1 69 03 04 AE 63 B1 6E 05 05 69
                 01 01 38 01 31 1C 16 04 1B 50 DD 69 04 01 38 04 8C 35 4D 69 04
                 01 B0 72 A6 CB 34 42 02 92 01 55 16 04 1B FF B5)
           (|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
            |SWANK|::|SYMBOL-EXTERNAL-P| "" 0.0f0
            |SWANK|::|MAKE-FUZZY-MATCHING|
            #Y(|SWANK|::|FUZZY-FIND-MATCHING-SYMBOLS-PERFORM-FUZZY-MATCH|
               #23Y(00 00 00 00 02 00 00 00 26 03 AE 6F 00 AC AF 76 01 B0 AD 30
                    01 19 05)
               (|SWANK|::|COMPLETION-OUTPUT-SYMBOL-CONVERTER|
                |SWANK|::|COMPUTE-HIGHEST-SCORING-COMPLETION|)
               (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
               (|COMMON-LISP|::|STRING| |COMMON-LISP|::|SYMBOL-NAME|)
               |COMMON-LISP|::|NIL| 1))
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|SYMBOL|) |COMMON-LISP|::|NIL| 1))
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|STRING| |COMMON-LISP|::|PACKAGE| |COMMON-LISP|::|&KEY|
        (|SWANK|::|FILTER| #'|COMMON-LISP|::|IDENTITY|)
        |SWANK|::|EXTERNAL-ONLY| |SWANK|::|TIME-LIMIT-IN-MSEC|)
       "Returns two values: a vector of fuzzy matchings for matching\n
symbols in PACKAGE, using the fuzzy completion algorithm, and the\n
remaining time limit.\n\n
Only those symbols are considered of which FILTER does return T.\n\n
If EXTERNAL-ONLY is true, only external symbols are considered. A\n
TIME-LIMIT-IN-MSEC of NIL is considered no limit; if it's zero or\n
negative, perform a NOP."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|415 457 (DEFUN FUZZY-FIND-MATCHING-PACKAGES (NAME &KEY TIME-LIMIT-IN-MSEC) ...)-18|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FUZZY-FIND-MATCHING-PACKAGES| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-FIND-MATCHING-PACKAGES|
       #171Y(00 00 00 00 01 00 00 00 A6 1C 01 00 00 00 3B 01 0D 7D 01 93 01 0C
             1B 09 DF B0 40 02 19 08 93 01 01 02 14 92 02 01 C6 14 2E 02 14 B1
             6F 03 DE 64 38 06 C6 FA 71 1D 93 04 04 AF 8F AD 5B 71 E0 63 1B 80
             4C 87 01 00 E0 63 DB AF 6F 07 01 02 1B 34 63 B2 B1 B3 63 E3 63 6E
             07 0A B5 38 01 31 1C 16 06 1B 2A 87 02 01 B5 AE 36 01 F8 BB AD 30
             08 42 02 93 01 0C AC B2 91 01 32 06 A0 FF 9E FE 9D FD 16 02 83 02
             AE 8D 9F 5B 92 04 45 16 06 83 01 AD 8D 9F FF AF AE 93 07 0E 2E 02
             14 B2 73 01 38 B3 AD 33 01 38 16 01 14 40 02 19 0A)
       (:|TIME-LIMIT-IN-MSEC| 0. |SWANK|::|GET-REAL-TIME-IN-MSECS|
        |SWANK|::|COMPLETION-OUTPUT-PACKAGE-CONVERTER| 32. #() ""
        |SWANK|::|PACKAGE-NAMES| |SWANK|::|COMPUTE-HIGHEST-SCORING-COMPLETION|
        :|SYMBOL-P| |SWANK|::|MAKE-FUZZY-MATCHING|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|NAME| |COMMON-LISP|::|&KEY| |SWANK|::|TIME-LIMIT-IN-MSEC|)
       "Returns a vector of fuzzy matchings for each package that is\n
similiar to NAME, and the remaining time limit.\n
Cf. FUZZY-FIND-MATCHING-SYMBOLS."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|460 471 (DEFSLIMEFUN FUZZY-COMPLETION-SELECTED (ORIGINAL-STRING COMPLETION) ...)-19-1|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C 3E 19 01)
   (|SWANK|::|FUZZY-COMPLETION-SELECTED| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FUZZY-COMPLETION-SELECTED|
       #13Y(00 00 00 00 02 00 00 00 26 03 00 19 03) () |COMMON-LISP|::|NIL|
       (|SWANK|::|ORIGINAL-STRING| |SWANK|::|COMPLETION|)
       "This function is called by Slime when a fuzzy completion is\n
selected by the user.  It is for future expansion to make\n
testing, say, a machine learning algorithm for completion scoring\n
easier.\n\n
ORIGINAL-STRING is the string the user completed from, and\n
COMPLETION is the completion object (see docstring for\n
SWANK:FUZZY-COMPLETIONS) corresponding to the completion that the\n
user selected."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|460 471 (DEFSLIMEFUN FUZZY-COMPLETION-SELECTED (ORIGINAL-STRING COMPLETION) ...)-19-2|
   #18Y(00 00 00 00 00 00 00 00 20 01 DA DA 72 A4 31 E6 19 01)
   (|SWANK|::|FUZZY-COMPLETION-SELECTED|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|474 484 (DEFPARAMETER *FUZZY-RECURSION-SOFT-LIMIT* 30 ...)-20|
   #26Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB DC 31 5A DB DD DE 2D 03 05 C6
        19 01)
   ((|COMMON-LISP|::|SPECIAL| |SWANK|::|*FUZZY-RECURSION-SOFT-LIMIT*|)
    |SWANK|::|*FUZZY-RECURSION-SOFT-LIMIT*| 30. |COMMON-LISP|::|VARIABLE|
    "This is a soft limit for recursion in\n
RECURSIVELY-COMPUTE-MOST-COMPLETIONS.  Without this limit,\n
completing a string such as \"ZZZZZZ\" with a symbol named\n
\"ZZZZZZZZZZZZZZZZZZZZZZZ\" will result in explosive recursion to\n
find all the ways it can match.\n\n
Most natural language searches and symbols do not have this\n
problem -- this is only here as a safeguard."
    |SYSTEM|::|%SET-DOCUMENTATION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|485 485 (DECLAIM (FIXNUM *FUZZY-RECURSION-SOFT-LIMIT*))-21|
   #15Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 19 01)
   ((|COMMON-LISP|::|FIXNUM| |SWANK|::|*FUZZY-RECURSION-SOFT-LIMIT*|))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|487 487 (DEFVAR *ALL-CHUNKS* 'NIL)-22|
   #24Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB 63 31 5A C6 19
        01)
   ((|COMMON-LISP|::|SPECIAL| |SWANK|::|*ALL-CHUNKS*|) |SWANK|::|*ALL-CHUNKS*|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|488 488 (DECLAIM (TYPE LIST *ALL-CHUNKS*))-23|
   #15Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 19 01)
   ((|COMMON-LISP|::|TYPE| |COMMON-LISP|::|LIST| |SWANK|::|*ALL-CHUNKS*|))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|490 500 (DEFUN COMPUTE-HIGHEST-SCORING-COMPLETION (SHORT FULL) ...)-24|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|COMPUTE-HIGHEST-SCORING-COMPLETION|
    |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|COMPUTE-HIGHEST-SCORING-COMPLETION|
       #59Y(00 00 00 00 02 00 00 00 26 03 63 AF AF 70 00 1B 10 94 00 AC B2 B2
            6E 03 01 9E 7A 84 02 16 01 83 00 AC 8D 9F 6C 16 01 AC 80 B1 00 AC
            DC DD 38 02 32 82 78 95 00 94 01 40 02 19 05)
       (|SWANK|::|COMPUTE-MOST-COMPLETIONS| |SWANK|::|SCORE-COMPLETION|
        #.#'|COMMON-LISP|::|>| #.#'|COMMON-LISP|::|FIRST|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|SHORT| |SWANK|::|FULL|)
       "Finds the highest scoring way to complete the abbreviation\n
SHORT onto the string FULL, using CHAR= as a equality function for\n
letters.  Returns two values:  The first being the completion\n
chunks of the highest scorer, and the second being the score."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|502 509 (DEFUN COMPUTE-MOST-COMPLETIONS (SHORT FULL) ...)-25|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|COMPUTE-MOST-COMPLETIONS| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|COMPUTE-MOST-COMPLETIONS|
       #28Y(00 00 00 00 02 00 00 00 26 03 00 10 00 B1 B1 DB DB 01 03 64 2D 08
            02 0E 00 11 19 03)
       (|SWANK|::|*ALL-CHUNKS*| 0.
        |SWANK|::|RECURSIVELY-COMPUTE-MOST-COMPLETIONS|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|SHORT| |SWANK|::|FULL|)
       "Finds most possible ways to complete FULL with the letters in SHORT.\n
Calls RECURSIVELY-COMPUTE-MOST-COMPLETIONS recursively.  Returns\n
a list of (&rest CHUNKS), where each CHUNKS is a description of\n
how a completion matches."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|511 589 (DEFUN RECURSIVELY-COMPUTE-MOST-COMPLETIONS (SHORT FULL SHORT-INDEX ...) ...)-26|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|RECURSIVELY-COMPUTE-MOST-COMPLETIONS|
    |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|RECURSIVELY-COMPUTE-MOST-COMPLETIONS|
       #161Y(00 00 00 00 08 00 00 00 26 00 00 2B 05 7F 09 00 00 7F 07 00 01 7F
             05 00 02 7F 04 00 03 7F 03 00 04 AC 6D 00 01 AD 6D 01 01 AE 6D 02
             01 06 03 03 1D 02 9D 34 B5 1B 80 4B 93 07 20 68 05 00 BA 68 07 01
             96 04 68 09 02 68 0A 03 68 0B 04 6B 03 72 62 6B 04 33 01 32 59 14
             28 FF AF 68 05 01 32 B1 0B 05 01 AC AE A2 34 1B 16 00 19 0D B8 AD
             73 01 01 A1 34 1D 08 AC A2 74 90 01 07 FF BB 9F 34 16 01 85 00 AC
             B9 72 62 91 01 2F 61 16 01 9D 34 9F 34 1C 56 68 03 02 72 63 AC 0E
             03 5D 0F 03 15 19 0D)
       (#Y(|SWANK|::|RECURSIVELY-COMPUTE-MOST-COMPLETIONS-SHORT-CUR|
           #36Y(00 00 00 00 00 00 00 00 26 01 69 00 02 69 00 01 72 62 90 01 2F
                0B 69 00 01 69 00 02 33 01 01 19 01 00 19 01)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|) ()
           "Returns the next letter from the abbreviation, or NIL\n
            if all have been used."
           1)
        #Y(|SWANK|::|RECURSIVELY-COMPUTE-MOST-COMPLETIONS-ADD-TO-CHUNK|
           #29Y(00 00 00 00 02 00 00 00 26 03 07 00 04 1C 04 9E 0C 00 05 AE 07
                00 04 5D 0C 00 04 19 03)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|CHAR| |SWANK|::|POS|)
           "Adds the CHAR at POS in FULL to the current chunk,\n
            marking the start position if it is empty."
           1)
        #Y(|SWANK|::|RECURSIVELY-COMPUTE-MOST-COMPLETIONS-COLLECT-CHUNK|
           #54Y(00 00 00 00 00 00 00 00 26 01 07 00 04 1F 25 14 72 62 38 07 C6
                FD 07 00 04 FB 71 1D 72 64 69 00 05 AD 7B 02 07 00 03 5D 0C 00
                03 00 0C 00 04 0C 00 05 19 02 19 01)
           (|COMMON-LISP|::|NIL| |COMMON-LISP|::|CHARACTER|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|) ()
           "Collects the current chunk to CHUNKS and prepares for\n
            a new chunk."
           1)
        |SWANK|::|*ALL-CHUNKS*| |SWANK|::|*FUZZY-RECURSION-SOFT-LIMIT*|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|SHORT| |SWANK|::|FULL| |SWANK|::|SHORT-INDEX|
        |SWANK|::|INITIAL-FULL-INDEX| |SWANK|::|CHUNKS|
        |SWANK|::|CURRENT-CHUNK| |SWANK|::|CURRENT-CHUNK-POS|
        |SWANK|::|RECURSE-P|)
       "Recursively (if RECURSE-P is true) find /most/ possible ways\n
to fuzzily map the letters in SHORT onto FULL, using CHAR= to\n
determine if two letters match.\n\n
A chunk is a list of elements that have matched consecutively.\n
When consecutive matches stop, it is coerced into a string,\n
paired with the starting position of the chunk, and pushed onto\n
CHUNKS.\n\n
Whenever a letter matches, if RECURSE-P is true,\n
RECURSIVELY-COMPUTE-MOST-COMPLETIONS calls itself with a position\n
one index ahead, to find other possibly higher scoring\n
possibilities.  If there are less than\n
*FUZZY-RECURSION-SOFT-LIMIT* results in *ALL-CHUNKS* currently,\n
this call will also recurse.\n\n
Once a word has been completely matched, the chunks are pushed\n
onto the special variable *ALL-CHUNKS* and the function returns."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|592 597 (DEFVAR *FUZZY-COMPLETION-SYMBOL-PREFIXES* "*+-%&?<" ...)-27|
   #30Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB DC 31 5A DB DD DE
        2D 03 05 C6 19 01)
   ((|COMMON-LISP|::|SPECIAL| |SWANK|::|*FUZZY-COMPLETION-SYMBOL-PREFIXES*|)
    |SWANK|::|*FUZZY-COMPLETION-SYMBOL-PREFIXES*| "*+-%&?<"
    |COMMON-LISP|::|VARIABLE|
    "Letters that are likely to be at the beginning of a symbol.\n
Letters found after one of these prefixes will be scored as if\n
they were at the beginning of ths symbol."
    |SYSTEM|::|%SET-DOCUMENTATION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|598 601 (DEFVAR *FUZZY-COMPLETION-SYMBOL-SUFFIXES* "*+->" ...)-28|
   #30Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB DC 31 5A DB DD DE
        2D 03 05 C6 19 01)
   ((|COMMON-LISP|::|SPECIAL| |SWANK|::|*FUZZY-COMPLETION-SYMBOL-SUFFIXES*|)
    |SWANK|::|*FUZZY-COMPLETION-SYMBOL-SUFFIXES*| "*+->"
    |COMMON-LISP|::|VARIABLE|
    "Letters that are likely to be at the end of a symbol.\n
Letters found before one of these suffixes will be scored as if\n
they were at the end of the symbol."
    |SYSTEM|::|%SET-DOCUMENTATION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|602 605 (DEFVAR *FUZZY-COMPLETION-WORD-SEPARATORS* "-/." ...)-29|
   #30Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB DC 31 5A DB DD DE
        2D 03 05 C6 19 01)
   ((|COMMON-LISP|::|SPECIAL| |SWANK|::|*FUZZY-COMPLETION-WORD-SEPARATORS*|)
    |SWANK|::|*FUZZY-COMPLETION-WORD-SEPARATORS*| "-/."
    |COMMON-LISP|::|VARIABLE|
    "Letters that separate different words in symbols.  Letters\n
after one of these symbols will be scores more highly than other\n
letters."
    |SYSTEM|::|%SET-DOCUMENTATION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|607 670 (DEFUN SCORE-COMPLETION (COMPLETION SHORT FULL) ...)-30|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|SCORE-COMPLETION| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|SCORE-COMPLETION|
       #118Y(00 00 00 00 03 00 00 00 26 04 00 2B 01 7F 02 00 00 9D 2B 07 AC 2C
             00 01 0B 00 00 AC 2C 01 01 0B 00 01 AC 2C 02 01 0B 00 02 AC 2C 03
             01 0B 00 03 AC 2C 04 01 0B 00 04 AC 2C 05 01 0B 00 05 AC 2C 06 01
             0B 00 06 AC 6D 07 01 AC B3 73 00 16 E2 68 04 00 72 62 B4 72 62 73
             01 38 72 B1 73 01 3A E3 AE 38 05 72 66 AD 73 02 37 E4 AF B7 73 01
             16 AE 7B 02 40 02 19 09)
       (#Y(|SWANK|::|SCORE-COMPLETION-AFTER-PREFIX-P|
           #34Y(00 00 00 00 01 00 00 00 26 02 AD DB 33 01 2F 1F 0F 69 01 01 DC
                73 01 01 6B 03 38 06 32 77 19 02 19 02)
           (|COMMON-LISP|::|NIL| 1. 0.
            |SWANK|::|*FUZZY-COMPLETION-SYMBOL-PREFIXES*|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|POS|) |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|SCORE-COMPLETION-WORD-SEPARATOR-P|
           #25Y(00 00 00 00 01 00 00 00 26 02 69 01 01 AE 73 01 01 6B 01 38 06
                32 77 19 02)
           (|COMMON-LISP|::|NIL| |SWANK|::|*FUZZY-COMPLETION-WORD-SEPARATORS*|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|POS|) |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|SCORE-COMPLETION-AFTER-WORD-SEPARATOR-P|
           #26Y(00 00 00 00 01 00 00 00 26 02 69 01 01 97 02 73 01 01 6B 01 38
                06 32 77 19 02)
           (|COMMON-LISP|::|NIL| |SWANK|::|*FUZZY-COMPLETION-WORD-SEPARATORS*|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|POS|) |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|SCORE-COMPLETION-AT-END-P|
           #23Y(00 00 00 00 01 00 00 00 26 02 AD 69 01 01 72 62 72 B2 33 01 2F
                19 02)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
           (|SWANK|::|POS|) |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|SCORE-COMPLETION-BEFORE-SUFFIX-P|
           #48Y(00 00 00 00 01 00 00 00 26 02 AD DB 69 01 01 72 62 73 02 37 33
                01 2F 1F 15 69 01 01 69 01 01 72 62 72 B2 73 01 01 6B 02 38 06
                32 77 19 02 19 02)
           (|COMMON-LISP|::|NIL| -2.
            |SWANK|::|*FUZZY-COMPLETION-SYMBOL-SUFFIXES*|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|POS|) |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|SCORE-COMPLETION-SCORE-OR-PERCENTAGE-OF-PREVIOUS|
           #42Y(00 00 00 00 03 00 00 00 26 04 AD 8E AC 19 AF DB 97 04 97 04 07
                00 07 74 73 02 39 DC B0 72 B5 73 02 37 33 01 35 19 04 A0 19 04)
           (|COMMON-LISP|::|NIL| 0.85f0 1.2f0)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|BASE-SCORE| |SWANK|::|POS| |SWANK|::|CHUNK-POS|)
           |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|SCORE-COMPLETION-SCORE-CHAR|
           #78Y(00 00 00 00 02 00 00 00 26 03 AE C6 34 1C 2D AE 07 00 01 34 1C
                29 AE 07 00 02 34 1C 25 AE 07 00 03 34 1C 21 AE 07 00 04 34 1C
                1D AE 07 00 05 34 1C 19 C8 14 AF AF 07 00 06 34 19 03 C7 1B 74
                C7 1B 71 C8 1B 6E C9 1B 6B CA 1B 68 CA 1B 65)
           (|COMMON-LISP|::|NIL|
            #Y(|SWANK|::|SCORE-COMPLETION-AT-BEGINNING-P|
               #15Y(00 00 00 00 01 00 00 00 26 02 AD 32 AC 19 02) ()
               (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
               (|SWANK|::|POS|) |COMMON-LISP|::|NIL| 1)
            10. 1. 8. 6.)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|POS| |SWANK|::|CHUNK-POS|) |COMMON-LISP|::|NIL| 1)
        #Y(|SWANK|::|SCORE-COMPLETION-SCORE-CHUNK|
           #47Y(00 00 00 00 01 00 00 00 26 02 9E 5C 78 72 62 DB 63 DB 87 05 01
                1B 0F AC AE B0 07 00 07 74 82 02 37 00 85 02 85 01 AE B0 91 01
                34 6B 15 19 05)
           (|COMMON-LISP|::|NIL| 0.)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|SWANK|::|CHUNK|) |COMMON-LISP|::|NIL| 1)
        10.0f0 #.#'|COMMON-LISP|::|+| #.#'|COMMON-LISP|::|LIST|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|COMPLETION| |SWANK|::|SHORT| |SWANK|::|FULL|)
       "Scores the completion chunks COMPLETION as a completion from\n
the abbreviation SHORT to the full string FULL.  COMPLETION is a\n
list like:\n
    ((0 \"mul\") (9 \"v\") (15 \"b\"))\n
Which, if SHORT were \"mulvb\" and full were \"multiple-value-bind\",\n
would indicate that it completed as such (completed letters\n
capitalized):\n
    MULtiple-Value-Bind\n\n
Letters are given scores based on their position in the string.\n
Letters at the beginning of a string or after a prefix letter at\n
the beginning of a string are scored highest.  Letters after a\n
word separator such as #- are scored next highest.  Letters at\n
the end of a string or before a suffix letter at the end of a\n
string are scored medium, and letters anywhere else are scored\n
low.\n\n
If a letter is directly after another matched letter, and its\n
intrinsic value in that position is less than a percentage of the\n
previous letter's value, it will use that percentage instead.\n\n
Finally, a small scaling factor is applied to favor shorter\n
matches, all other things being equal."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|672 683 (DEFUN HIGHLIGHT-COMPLETION (COMPLETION FULL) ...)-31|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|HIGHLIGHT-COMPLETION| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|HIGHLIGHT-COMPLETION|
       #51Y(00 00 00 00 02 00 00 00 26 03 AD 72 61 38 02 71 4D AF 63 1B 15 87
            01 00 AE 94 01 94 02 A0 5C 78 72 62 73 02 37 80 4B 02 83 01 AD 8D
            9F 67 16 02 15 19 03)
       () (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|COMPLETION| |SWANK|::|FULL|)
       "Given a chunk definition COMPLETION and the string FULL,\n
HIGHLIGHT-COMPLETION will create a string that demonstrates where\n
the completion matched in the string.  Matches will be\n
capitalized, while the rest of the string will be lower-case."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|685 693 (DEFUN FORMAT-FUZZY-COMPLETION-SET (WINNERS) ...)-32|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|SWANK|::|FORMAT-FUZZY-COMPLETION-SET| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|SWANK|::|FORMAT-FUZZY-COMPLETION-SET|
       #76Y(00 00 00 00 01 00 00 00 26 02 AD 01 02 1B 0C 87 02 01 78 72 62 AD
            30 00 F8 83 02 AE 8D 9F 70 15 16 01 F8 63 AF 01 03 1B 1C 87 03 04
            5B FA 83 04 5B F9 A1 5C 5B F8 DB 6B 02 B3 AF B2 70 03 B1 B1 33 05
            15 83 03 AF 8D 9F 60 00 19 08)
       (|SYSTEM|::|MAX-IF|
        #Y(|SWANK|::|FORMAT-FUZZY-COMPLETION-SET-1|
           #53Y(00 00 00 00 05 00 00 00 21 00 B2 31 98 B2 01 02 B4 01 03 B7 2D
                08 00 DB B3 38 02 31 95 B2 01 02 DC DD 01 03 B7 2D 09 04 DF B3
                38 02 31 95 AE B3 31 90 9E 19 07)
           (|SYSTEM|::|DO-FORMAT-ASCII| "  score " 8. 2.
            |SYSTEM|::|DO-FORMAT-FIXED-FLOAT| "  ")
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        |COMMON-LISP|::|*STANDARD-OUTPUT*| |SWANK|::|HIGHLIGHT-COMPLETION|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SWANK|::|WINNERS|)
       "Given a list of completion objects such as on returned by\n
FUZZY-COMPLETION-SET, format the list into user-readable output\n
for interactive debugging purpose."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|695 695 (PROVIDE :SWANK-FUZZY)-33|
   #15Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 19 01)
   (:|SWANK-FUZZY| |COMMON-LISP|::|PROVIDE|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
