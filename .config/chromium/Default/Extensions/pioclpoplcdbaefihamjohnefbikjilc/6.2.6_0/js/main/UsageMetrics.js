function UsageMetrics(g,k,m,n,p,q){function l(a){if(navigator.onLine){var c=0,d=0,k;for(k in b){var g=parseInt(k);c++;g>d&&(d=g)}0<c?e(c,d,a):a&&a()}else a&&a()}function e(a,c,e){function l(a,k){if(a){b=[];c>d&&(d=c);var f=Persistent.get("uploaded");f||(f={});f[h.userId]=a.uploaded;Persistent.set("uploaded",f);var f=Persistent.get("savedAuthInfo"),g=Persistent.get("shownNearQuotaUpsell");f&&f.userInfo&&f.userInfo[h.userId]&&f.userInfo[h.userId].monthEnd&&f.userInfo[h.userId].monthEnd<new Date&&(f.userInfo[h.userId].monthEnd+=
2592E6,g||(g={}),delete g[h.userId],Persistent.set("shownNearQuotaUpsell",g));Persistent.set("savedAuthInfo",f);f=Persistent.get("userLastUpdated")||0;a.userLastUpdated>f&&(Persistent.set("userLastUpdated",a.userLastUpdated),q())}e&&e()}function s(){r.client.NoteStore.getSyncStateWithMetrics(l,h.authenticationToken,{sessions:a})}var h,r;k(function(a){(h=a)&&h.authenticationToken?(r=new JsonRpc(null,["NoteStore.getSyncStateWithMetrics"],g,m,n,p),r.initWithAuthToken(h.authenticationToken,s)):(log.warn("Tried to send UsageMetrics, but not logged in."),
e&&e())})}var d=0,b={};this.recordActivity=function(a){var c;c=new Date;var e=15*Math.floor(c.getMinutes()/15);c.setMinutes(e);c.setSeconds(0);c.setMilliseconds(0);c=Math.round(c.getTime()/1E3);d>=c?a&&a():(b[c]=!0,l(a))};this.send=l;this.getJson=function(){var a={};a.lastSent=d;a.activityBlocks={};for(var c in b)a.activityBlocks[c]=b[c];return a};this.importFromJson=function(a){try{d=a.lastSent,b=a.activityBlocks}catch(c){d=0,b={},log.warn("Failed to import saved UsageMetrics from JSON object.")}};
Object.preventExtensions(this)}Object.preventExtensions(UsageMetrics);
function UsageMetricsManager(g,k,m,n,p,q){function l(){var d={},b;for(b in e)d[b]=e[b].getJson();Persistent.set("usageMetrics",d)}var e={};(function(){try{var d=Persistent.get("usageMetrics"),b;for(b in d)e[b]=new UsageMetrics(g,k,m,n,p,q),e[b].importFromJson(d[b])}catch(a){log.warn("Failure restoring usage metrics. Setting blank."),e={}}})();this.recordActivity=function(){var d="";k(function(b){var a=Persistent.get("lastActiveTimes");a||(a={});var c=b?b.userId:"unauthed";a[c]||(a[c]={count:0});a.unauthed||
(a.unauthed={count:0});a[c].time=(new Date).getTime();a.unauthed.time=a[c].time;Persistent.set("lastActiveTimes",a);b&&(d=b.username);d&&(b=e[d],b||(b=new UsageMetrics(g,k,m,n,p,q),e[d]=b),b.recordActivity(l))})};Object.preventExtensions(this)}Object.preventExtensions(UsageMetricsManager);
