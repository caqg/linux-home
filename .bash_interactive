# -*- Shell-Script -*- vim: ft=sh :

### Functions

if [ "$DISPLAY" ]; then
	export MYVIM=gvim
	export V_ARGS="-"
else
	[ "$TERM" = "xterm-256color" ] && export TERM=xterm-emacs
	export MYVIM=vim
	export V_ARGS="--not-a-term -"
fi

+             () { pushd "$@"; }
-             () { popd "$@"; }
=             () { dirs -v "$@"; }

2top          () { cd $(git rev-parse --show-toplevel); }
colorize-ls   () { export LSFLAGS=--color=auto;
		   eval $(dircolors -b ~/.dircolors); }
uncolorize-ls () { unset LSFLAGS; unset LS_COLORS; }

dir           () { LC_ALL=C /bin/dir ${LSFLAGS} -F "$@"; }

gitd          () { git d; }
gitl          () { git l ${1:+-n} ${1:--n 5} | cut -c -${COLUMNS:-80}; }
gits          () { git s; }

h             () { history "$@"; }
hf            () { if [ $# -gt 0 ];
		   then history | grep -e "$*" -;
		   else history;
		   fi; }
j             () { jobs "$@"; }
k             () { kill -9 "$@"; }

l             () { LC_ALL=C /bin/ls  ${LSFLAGS} \
		   -Alh --time-style=iso --group-directories-first "$@"; }
lt            () { LC_ALL=C /bin/ls  ${LSFLAGS} \
		   -Altrh --time-style=iso "$@"; }
vdir          () { LC_ALL=C /bin/vdir ${LSFLAGS} "$@"; }

o             () { { [ $# -eq 0 ] && echo "." ; echo "$@"; } |
			   /usr/bin/xargs -n1 /usr/bin/xdg-open; }
v             () { $MYVIM -MR "$@"; }
v-            () { $MYVIM -MR $V_ARGS; }

### Prompts

case $(whoami) in
root)
	export PS1='# ' ;;
*)
	export PS1='$ ' ;;
esac
export PS2='> '
export PS3='? '
export PS4='+ '

# To flip between dark and light bg where possible
export MYBGSHINE=dark

case "${TERM}" in
xterm*|rxvt*)
	updatePS1WithGitBranch () {
		left='\[\e]0;\u@\h: \w'
		middle=$(git branch --show-current 2>/dev/null |
				 sed -e '/^ /d' -e 's/^\(..*\)/ git:\1/')
		right='\a\]\$ '
		PS1="$left$middle$right"
	}

	PROMPT_COMMAND=updatePS1WithGitBranch
	colorize-ls
	;;
linux|screen)
	colorize-ls
	;;
esac

[ "$VIM_TERMINAL" ] && uncolorize-ls

### bash-completion

if [ -f /usr/share/bash-completion/bash_completion ]; then
	. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash-completion ]; then
	. /etc/bash_completion
fi

complete -F _command lx
complete -F _command vv
complete -F _command x

##end .bash_interactive
