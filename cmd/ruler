#!/bin/bash

defaultWidth () {
	if [ -t 0 ];
	then	stty -a |
		sed -n -e '/.*; columns \([0-9][0-9]*\);.*/s//\1/p';
	else	echo 80
	fi
}

width () {
	case "$1" in
	"")	echo $(defaultWidth);;
	*)	echo "$1";;
	esac
}

usage () {
	me=$(basename $0)
	echo "usage: $me [columns]"
	echo
	echo "       columns defaults to however wide the tty is"
	echo "       (80 if stdin is not a tty)"
	echo
	echo "Pipe it to tac to set the ruler as a footer"
	echo "Pipe it to rev for a count-down ruler (works only until 99)"
}

# parse command line
# No args: Header at current terminal width, or 80 if not a tty
# 1  arg : must be the width (integer), else error, show usage
# >1 arg : error, show usage

case $# in
0)	width=$(defaultWidth) ;;
1)	if expr match "$1" "[0-9][0-9]*" >/dev/null 2>&1;
	then	width=$(width "$1"); shift
	else	usage; exit 1;
	fi ;;
*)	usage; exit 1;;
esac

awk -v W="$width" '
function printDecades () {
	if (int(W/10) > 0) {
		for (i = 1; i <= int(W/10); ++i)
			printf "%10g", i;
	}
	leftover=W-10*int(W/10)
	while (leftover > 0) { # pad to the units length, think rev(1)
		printf " "
		--leftover
	}
	printf "\n"
}

function printUnits () {
	for (i = 1; i <= W; ++i)
		if (i % 5 == 0)
			if (i % 10 == 0)
				printf "0"
			else
				printf "|"
		else if (i == 1)
			printf "1"
		else
			printf "."
	printf "\n"
}

BEGIN {
	printDecades();
	printUnits();
}
'

# end ruler
