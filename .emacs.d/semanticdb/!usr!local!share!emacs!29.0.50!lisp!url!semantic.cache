;; Object semanticdb-project-database-file-15669d6be8c4
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-15669d6be8c4"
  :tables
  (list
    (semanticdb-table "semanticdb-table-15669d3128e8"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [956 973])
            ("puny" include nil nil [974 989])
            ("nsm" include nil nil [990 1004])
            ("subr-x" include nil nil [1026 1043])
            ("url-callback-arguments" variable nil nil [1046 1077])
            ("url-callback-function" variable nil nil [1078 1108])
            ("url-current-object" variable nil nil [1109 1136])
            ("url-http-after-change-function" variable nil nil [1137 1176])
            ("url-http-chunked-counter" variable nil nil [1177 1210])
            ("url-http-chunked-last-crlf-missing" variable nil nil [1211 1254])
            ("url-http-chunked-length" variable nil nil [1255 1287])
            ("url-http-chunked-start" variable nil nil [1288 1319])
            ("url-http-connection-opened" variable nil nil [1320 1355])
            ("url-http-content-length" variable nil nil [1356 1388])
            ("url-http-content-type" variable nil nil [1389 1419])
            ("url-http-data" variable nil nil [1420 1442])
            ("url-http-end-of-headers" variable nil nil [1443 1475])
            ("url-http-extra-headers" variable nil nil [1476 1507])
            ("url-http-noninteractive" variable nil nil [1508 1540])
            ("url-http-method" variable nil nil [1541 1565])
            ("url-http-no-retry" variable nil nil [1566 1592])
            ("url-http-process" variable nil nil [1593 1618])
            ("url-http-proxy" variable nil nil [1619 1642])
            ("url-http-response-status" variable nil nil [1643 1676])
            ("url-http-response-version" variable nil nil [1677 1711])
            ("url-http-target-url" variable nil nil [1712 1740])
            ("url-http-transfer-encoding" variable nil nil [1741 1776])
            ("url-show-status" variable nil nil [1777 1801])
            ("url-http-referer" variable nil nil [1802 1827])
            ("url-gw" include nil nil [1829 1846])
            ("url-parse" include nil nil [1847 1867])
            ("url-cookie" include nil nil [1868 1889])
            ("mail-parse" include nil nil [1890 1911])
            ("url-auth" include nil nil [1912 1931])
            ("url" include nil nil [1932 1946])
            ("url-cache-create-filename" function (:prototype-flag t) nil [1947 1996])
            ("url-http-default-port" variable
               (:constant-flag t
                :default-value 80)
                nil [1998 2054])
            ("url-http-asynchronous-p" variable
               (:constant-flag t
                :default-value t)
                nil [2055 2127])
            ("defalias" code nil nil [2128 2188])
            ("url-http-real-basic-auth-storage" variable nil nil [2190 2235])
            ("url-http-proxy-basic-auth-storage" variable nil nil [2236 2282])
            ("url-http-open-connections" variable (:default-value (make-hash-table :test 'equal :size 17)) nil [2284 2417])
            ("url-http-version" variable (:default-value "1.1") nil [2419 2694])
            ("url-http-attempt-keepalives" variable (:default-value t) nil [2696 2944])
            ("url-http-codes" variable
               (:constant-flag t
                :default-value '((100 continue "Continue with request") (101 switching-protocols "Switching protocols") (102 processing "Processing (Added by DAV)") (200 OK "OK") (201 created "Created") (202 accepted "Accepted") (203 non-authoritative "Non-authoritative information") (204 no-content "No content") (205 reset-content "Reset content") (206 partial-content "Partial content") (207 multi-status "Multi-status (Added by DAV)") (300 multiple-choices "Multiple choices") (301 moved-permanently "Moved permanently") (302 found "Found") (303 see-other "See other") (304 not-modified "Not modified") (305 use-proxy "Use proxy") (307 temporary-redirect "Temporary redirect") (400 bad-request "Bad Request") (401 unauthorized "Unauthorized") (402 payment-required "Payment required") (403 forbidden "Forbidden") (404 not-found "Not found") (405 method-not-allowed "Method not allowed") (406 not-acceptable "Not acceptable") (407 proxy-authentication-required "Proxy authentication required") (408 request-timeout "Request time-out") (409 conflict "Conflict") (410 gone "Gone") (411 length-required "Length required") (412 precondition-failed "Precondition failed") (413 request-entity-too-large "Request entity too large") (414 request-uri-too-large "Request-URI too large") (415 unsupported-media-type "Unsupported media type") (416 requested-range-not-satisfiable "Requested range not satisfiable") (417 expectation-failed "Expectation failed") (422 unprocessable-entity "Unprocessable Entity (Added by DAV)") (423 locked "Locked") (424 failed-Dependency "Failed Dependency") (451 unavailable-for-legal-reasons "Unavailable for legal reasons") (500 internal-server-error "Internal server error") (501 not-implemented "Not implemented") (502 bad-gateway "Bad gateway") (503 service-unavailable "Service unavailable") (504 gateway-timeout "Gateway time-out") (505 http-version-not-supported "HTTP version not supported") (507 insufficient-storage "Insufficient storage")))
                nil [2946 5912])
            ("url-https-default-port" variable
               (:constant-flag t
                :default-value 443)
                nil [5914 5973])
            ("url-http-debug" function (:arguments ("args")) nil [6238 6309])
            ("url-http-mark-connection-as-busy" function (:arguments ("host" "port" "proc")) nil [6311 6624])
            ("url-http-mark-connection-as-free" function (:arguments ("host" "port" "proc")) nil [6626 7090])
            ("url-http-find-free-connection" function (:arguments ("host" "port" "gateway-method")) nil [7092 9010])
            ("url-http--user-agent-default-string" function nil nil [9012 9785])
            ("url-http--get-referer" function (:arguments ("url")) nil [9787 11221])
            ("url-http-user-agent-string" function nil nil [11251 11914])
            ("url-http-create-request" function nil nil [11916 18066])
            ("url-http--encode-string" function (:arguments ("s")) nil [18068 18180])
            ("url-http-clean-headers" function nil nil [18202 18576])
            ("url-http-handle-authentication" function (:arguments ("proxy")) nil [18578 21868])
            ("url-http-parse-response" function nil nil [21890 22476])
            ("url-http-handle-cookies" function nil nil [22478 23142])
            ("declare-function" code nil nil [23144 23199])
            ("declare-function" code nil nil [23200 23251])
            ("url-http--insert-file-helper" function (:arguments ("buffer" "url" "visit")) nil [23253 24215])
            ("url-http-parse-headers" function nil nil [24217 42080])
            ("declare-function" code nil nil [42082 42192])
            ("url-handle-content-transfer-encoding" function nil nil [42194 42587])
            ("url-http-activate-callback" function nil nil [42606 43016])
            ("url-http-idle-sentinel" function (:arguments ("proc" "_why")) nil [43087 43351])
            ("url-http-end-of-document-sentinel" function (:arguments ("proc" "why")) nil [43353 45007])
            ("url-http-simple-after-change-function" function (:arguments ("_st" "_nd" "_length")) nil [45009 45313])
            ("url-http-content-length-after-change-function" function (:arguments ("_st" "nd" "_length")) nil [45315 46481])
            ("url-http-chunked-encoding-after-change-function" function (:arguments ("st" "nd" "length")) nil [46483 50704])
            ("url-http-wait-for-headers-change-function" function (:arguments ("_st" "nd" "_length")) nil [50706 55810])
            ("url-http" function (:arguments ("url" "callback" "cbargs" "retry-buffer" "gateway-method")) nil [55812 60360])
            ("url-https-proxy-connect" function (:arguments ("connection")) nil [60362 61184])
            ("url-https-proxy-after-change-function" function (:arguments ("_st" "_nd" "_length")) nil [61186 63367])
            ("url-http-async-sentinel" function (:arguments ("proc" "why")) nil [63369 64452])
            ("url-http-generic-filter" function (:arguments ("proc" "data")) nil [64871 65620])
            ("defalias" code nil nil [65827 66204])
            ("url-http-head" function (:arguments ("url")) nil [66206 66332])
            ("url-http-file-exists-p" function (:arguments ("url")) nil [66334 66705])
            ("defalias" code nil nil [66707 66767])
            ("url-http-head-file-attributes" function (:arguments ("url" "_id-format")) nil [66769 67447])
            ("declare-function" code nil nil [67449 67528])
            ("url-http-file-attributes" function (:arguments ("url" "id-format")) nil [67530 67717])
            ("url-http-options" function (:arguments ("url")) nil [67719 69930])
            ("url-https-asynchronous-p" variable
               (:constant-flag t
                :default-value t)
                nil [70060 70134])
            ("defalias" code nil nil [70390 70450])
            ("url-https-create-secure-wrapper" function (:arguments ("method" "args")) nil [70452 70815])
            ("url-https-create-secure-wrapper" code nil nil [70865 70924])
            ("url-https-create-secure-wrapper" code nil nil [70987 71040])
            ("url-https-create-secure-wrapper" code nil nil [71105 71160])
            ("url-https-create-secure-wrapper" code nil nil [71225 71300])
            ("url-http" package nil nil [71302 71321]))          
      :file "url-http.el.gz"
      :pointmax 71349
      :fsize 18764
      :lastmodtime '(25331 1972 0 0)
      :unmatched-syntax '((close-paren 1043 . 1044) (symbol 1006 . 1023) (open-paren 1005 . 1006))))
  :file "!usr!local!share!emacs!29.0.50!lisp!url!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
